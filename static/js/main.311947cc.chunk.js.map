{"version":3,"sources":["utils/types.ts","components/AppHeader/AppHeader.tsx","utils/constants.ts","utils/helpers.ts","utils/api.ts","services/actions/Modal.ts","services/actions/User.ts","services/actions/Ingredients.ts","services/reducers/Ingredients.ts","services/actions/Constructor.ts","services/reducers/Constructor.ts","services/actions/IngredientDetails.ts","services/reducers/IngredientDetails.ts","services/actions/Order.ts","services/reducers/Order.ts","services/reducers/Modal.ts","services/reducers/User.ts","services/actions/WebSocket.ts","services/middleware/socket.ts","services/reducers/OrderList.ts","services/reducers/Root.ts","components/Modal/ModalOverlay/ModalOverlay.tsx","components/Modal/Modal.tsx","utils/getIngredientsGroups.ts","components/BurgerIngredients/IngredientItem/IngredientItem.tsx","components/BurgerIngredients/IngredientsBlock/IngredientsBlock.tsx","components/BurgerIngredients/IngredientsTabs/IngredientsTabs.tsx","components/BurgerIngredients/BurgerIngredients.tsx","components/BurgerConstructor/ConstructotIngredient/ConstructotIngredient.tsx","components/ProtectedRoute/ProtectedRoute.tsx","components/BurgerConstructor/BurgerConstructor.tsx","pages/ConstructorPage/ConstructorPage.tsx","components/AdditionalLink/AdditionalLink.tsx","hooks/useForm.ts","pages/SinglePageWrapper.tsx","pages/LoginPage/LoginPage.tsx","pages/RegistrationPage/RegistrationPage.tsx","pages/ResetPasswordPage/ResetPasswordPage.tsx","pages/ProfilePage/Profile/Profile.tsx","components/OrderListItem/OrderListItem.tsx","components/Feed/Feed.tsx","components/OrderListItem/OrderItem/OrderItem.tsx","pages/ProfilePage/Orders/Orders.tsx","pages/ProfilePage/Logout/Logout.tsx","pages/ProfilePage/ProfilePage.tsx","components/IngredientDetails/IngredientDetails.tsx","components/BurgerConstructor/OrderDetails/icon/done.svg","components/BurgerConstructor/OrderDetails/OrderDetails.tsx","components/Modal/ErrorModal/ErrorModal.tsx","pages/FeedPage/FeedPage.tsx","components/App/App.tsx","index.jsx","components/OrderListItem/OrderListItem.module.css","pages/ProfilePage/ProfilePage.module.css","components/Feed/Feed.module.css","components/OrderListItem/OrderItem/OrderItem.module.css","components/AppHeader/AppHeader.module.css","components/IngredientDetails/IngredientDetails.module.css","components/Modal/Modal.module.css","components/BurgerConstructor/BurgerConstructor.module.css","components/BurgerIngredients/BurgerIngredients.module.css","components/BurgerIngredients/IngredientItem/IngredientItem.module.css","components/AdditionalLink/AdditionalLink.module.css","components/BurgerConstructor/OrderDetails/OrderDetails.module.css","components/Modal/ModalOverlay/ModalOverlay.module.css","pages/ConstructorPage/ConstructorPage.module.css","components/BurgerIngredients/IngredientsBlock/IngredientsBlock.module.css","components/BurgerIngredients/IngredientsTabs/IngredientsTabs.module.css","components/BurgerConstructor/ConstructotIngredient/ConstructorIngredient.module.css","pages/SinglePageWrapper.module.css","pages/ProfilePage/Orders/Ordres.module.css","components/Modal/ErrorModal/ErrorModal.module.css"],"names":["EnumOrderStatusName","EnumIconType","EnumModalType","EnumIngredientType","EnumResetPassportStepType","getIcon","type","isActive","CONSTRUCTOR","ORDER_QUEUE","LK","NavItem","to","text","useLocation","pathname","className","classNames","styles","navLink","exact","activeClassName","AppHeader","wrapper","nav","leftBlock","centralBlock","rightBlock","BASIC_URL","getUrl","uri","WSS_ALL_ORDERS_URL","WSS_USER_ORDERS_URL","API_INGREDIENTS_URL","API_ORDERS_URL","API_AUTH_URL","API_PASSWORD_RESET_URL","API_LOGIN_URL","API_LOGOUT_URL","API_REGISTER_URL","API_TOKEN_URL","API_USER_URL","API_PASSWORD_RESET_CONFIRMATION_URL","setCookie","name","value","options","path","expires","Date","toUTCString","updatedCookie","encodeURIComponent","optionKey","optionValue","document","cookie","getCookie","matches","match","RegExp","replace","decodeURIComponent","undefined","deleteCookie","calculateOrderCost","ingredients","reduce","sum","ingredient","price","diffDates","checkedData","getTime","dateParse","createdAt","dayString","createdDate","daysDiff","Math","ceil","toLocaleTimeString","hour","minute","getOrderIngredients","orderIngredients","result","ingredientItem","_id","getIngredientWithOrderHash","orderId","uuid","checkResponse","response","ok","json","then","err","Promise","reject","request","url","fetch","saveTokens","refreshToken","accessToken","fetchWithRefresh","res","message","method","headers","body","JSON","stringify","token","authorization","APPEND_MODAL_TYPE","APPEND_ERROR_MODAL_TYPE","REMOVE_MODAL_TYPE","GET_USER_REQUEST","GET_USER_SUCCESS","GET_USER_FAILED","SET_NEED_AUTH","LOGOUT_USER","loginUser","email","password","dispatch","resp","login","success","data","user","catch","logoutUser","getUserData","patchUserData","setUserApiData","registrationUser","userRegister","GET_INGREDIENTS_REQUEST","GET_INGREDIENTS_SUCCESS","GET_INGREDIENTS_FAILED","getIngredientsData","items","InitialIngredientsState","ingredientsRequest","ingredientsFailed","ADD_INGREDIENT","REMOVE_INGREDIENT","MOVE_INGREDIENT","InitialConstructorState","bun","totalPrice","ADD_INGREDIENT_DETAILS","REMOVE_INGREDIENT_DETAILS","InitialIngredientDetailsState","SENT_ORDER_REQUEST","SENT_ORDER_SUCCESS","SENT_ORDER_FAILED","sendOrderRequest","orderList","Object","assign","sendOrder","number","order","modalType","ORDER","InitialOrderState","orderRequest","orderFailed","orderData","InitialModalState","status","InitialUserState","needAuth","userRequest","userFailed","wsActions","WS_CONNECTION_START","WS_CONNECTION_SUCCESS","WS_CONNECTION_ERROR","WS_GET_MESSAGE","WS_CONNECTION_CLOSED","wsInit","wsSendMessage","onOpen","onClose","onError","onMessage","initialState","ordersRequest","ordersFailed","orderListReducer","state","action","payload","rootReducer","combineReducers","constructor","BUN","totalPriceWithoutBun","orderIndex","length","filter","newIndex","OrderListWithoutMovedItem","item","newIngredientsOrderList","slice","map","index","ingredientDetails","modal","ERROR","newState","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunkMiddleware","store","socket","next","getState","WebSocket","onopen","event","onerror","onmessage","dataObject","parse","orders","onclose","send","createStore","useAppDispatch","useDispatch","useAppSelector","useSelector","ModalOverlay","children","onClick","modalRoot","getElementById","Modal","title","history","useHistory","useEffect","handleEscape","e","key","addEventListener","removeEventListener","ReactDOM","createPortal","stopPropagation","header","goBack","button","id","getOrderIngredientsIDs","forEach","push","IngredientItem","location","ingredientId","count","orderIngredientList","getCount","useDrag","collect","monitor","isDrag","isDragging","dragRef","ref","background","size","src","image","alt","priceBlock","IngredientsBlock","ingredientsBlock","IngredientsTabs","current","changeCurrentZone","active","SAUCE","MAIN","BurgerIngredients","useState","currentZone","setCurrentZone","bunRef","useRef","sauceRef","mainRef","ingredientsByTypeList","previousValue","currentValue","main","sauce","getIngredientsGroups","zone","scrollIntoView","onScroll","currentPosition","currentTarget","scrollTop","offsetTop","bufZone","mainZone","BurgerIngredientsContainer","ConstructorIngredient","useDrop","accept","hover","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","oldIndex","moveCard","drop","drag","thumbnail","handleClose","onDeleteIngredient","ProtectedRoute","rest","isAuth","isChecked","setIsChecked","init","useCallback","render","from","BurgerConstructor","redirectToAuth","setRedirectToAuth","hasBun","hasIngredients","canOrder","onDropHandler","dropTarget","isLocked","selectedBlock","sort","a","b","disabled","htmlType","ConstructorPage","content","DndProvider","backend","HTML5Backend","AdditionalLink","label","lintText","classnames","linkLabel","link","useForm","inputValues","values","setValues","handleChange","target","SinglePageWrapper","LoginPage","locationState","enterHandler","preventDefault","onSubmit","onChange","autoComplete","LoginPageContainer","RegistrationPage","placeholder","RegistrationPageContainer","getStepContent","step","EMAIL","PASSWORD","PasswordConformation","isEmailConfirm","passwordResetConfirmation","error","errorText","EmailConformation","passwordReset","ResetPasswordPage","ResetPasswordPageContainer","ProfileInput","section","icon","Profile","isModify","setIsModify","ProfileWrapper","OrderListItem","useRouteMatch","ingredientList","params","orderIngredient","i","Fragment","param","paramImg","image_mobile","lastParamImg","paramAdditionalValue","reverse","OrderTable","doneOrders","pendingOrders","numbers","numbers_block","numbers_blue","result_text","ingredientsID","includes","OrderList","orderItemData","Feed","container","orderTable","OrderItem","orderItem","isModal","orderIngredientsSet","Set","ingredientID","iconImg","OrderItemContainer","selectedOrderId","useParams","selectedOrderData","find","Orders","OrdersContainer","isSinglePage","stateAccessToken","split","getClearAccessToken","Logout","onLogout","logoutHandler","ProfileNavLink","activeLabel","labelWrapper","ProfilePage","navHint","ProfilePageContainer","IngredientDetailsContent","isLoading","getProperty","propertyName","loaderContainer","loader","image_large","propertyList","propertyItem","IngredientDetails","setIsLoading","IngredientDetailsContainer","OrderDetails","orderNumber","doneIcon","ErrorModal","FeedPage","getModal","App","handleModalClose","StrictMode","module","exports"],"mappings":"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","file":"static/js/main.311947cc.chunk.js","sourcesContent":["import { NavLinkProps } from 'react-router-dom';\r\nimport { APPEND_ERROR_MODAL_TYPE, TModalActions } from '../services/actions/Modal';\r\nimport { TIngredientActions } from '../services/actions/Constructor';\r\nimport { TIngredientDetailsActions } from '../services/actions/IngredientDetails';\r\nimport { TIngredientsActions } from '../services/actions/Ingredients';\r\nimport { TOrderActions } from '../services/actions/Order';\r\nimport { TUserActions } from '../services/actions/User';\r\nimport { TWSActions } from '../services/actions/WebSocket';\r\nimport { Action, ActionCreator } from 'redux';\r\nimport { store } from '../services/reducers/Root';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { InitialIngredientsState } from '../services/reducers/Ingredients';\r\nimport { InitialConstructorState } from '../services/reducers/Constructor';\r\nimport { InitialIngredientDetailsState } from '../services/reducers/IngredientDetails';\r\nimport { InitialOrderState } from '../services/reducers/Order';\r\nimport { InitialModalState } from '../services/reducers/Modal';\r\nimport { InitialUserState } from '../services/reducers/User';\r\n\r\nexport type IngredientType = {\r\n    readonly _id: string;\r\n    readonly name: string;\r\n    readonly type: EnumIngredientType;\r\n    readonly proteins: number;\r\n    readonly fat: number;\r\n    readonly carbohydrates: number;\r\n    readonly calories: number;\r\n    readonly price: number;\r\n    readonly image: string;\r\n    readonly image_mobile: string;\r\n    readonly image_large: string;\r\n    readonly __v: number;\r\n};\r\n\r\nexport enum EnumOrderStatusName {\r\n    'created' = 'Создан',\r\n    'pending' = 'Готовится',\r\n    'done' = 'Готов'\r\n}\r\n\r\nexport type OrderType = {\r\n    readonly _id: string;\r\n    readonly createdAt: string;\r\n    readonly updatedAt: string;\r\n    readonly status: 'created' | 'pending' | 'done';\r\n    readonly name: string;\r\n    readonly number: number;\r\n    readonly ingredients: string[];\r\n};\r\n\r\nexport interface OrderedIngredient extends IngredientType {\r\n    orderIndex: number;\r\n    orderId: string;\r\n    index: number;\r\n}\r\n\r\nexport enum EnumIconType {\r\n    CONSTRUCTOR = 'constructor',\r\n    ORDER_QUEUE = 'orderQueue',\r\n    LK = 'lk'\r\n}\r\n\r\nexport enum EnumModalType {\r\n    ERROR = 'error',\r\n    ORDER = 'order'\r\n}\r\n\r\nexport enum EnumIngredientType {\r\n    BUN = 'bun',\r\n    SAUCE = 'sauce',\r\n    MAIN = 'main'\r\n}\r\n\r\nexport enum EnumResetPassportStepType {\r\n    EMAIL = 'email',\r\n    PASSWORD = 'password'\r\n}\r\n\r\nexport type LocationProps = {\r\n    state: {\r\n        from: Location;\r\n        isEmailConfirm: boolean;\r\n    };\r\n};\r\n\r\nexport type NavItemProps = Pick<NavLinkProps, 'to'> & { text: string };\r\n\r\nexport type TUserInfoData = {\r\n    email: string;\r\n    name: string;\r\n};\r\n\r\nexport interface IError {\r\n    readonly type: typeof APPEND_ERROR_MODAL_TYPE;\r\n    message: String;\r\n}\r\n\r\nexport interface IIngredientList {\r\n    [index: string]: IngredientType;\r\n}\r\n\r\nexport type TInitialState = {\r\n    ingredients?: typeof InitialIngredientsState;\r\n    constructor: typeof InitialConstructorState;\r\n    ingredientDetails: typeof InitialIngredientDetailsState;\r\n    order: typeof InitialOrderState;\r\n    modal: typeof InitialModalState;\r\n    user: typeof InitialUserState;\r\n};\r\n\r\nexport type TAppActions =\r\n    | TIngredientActions\r\n    | TIngredientDetailsActions\r\n    | TIngredientsActions\r\n    | TModalActions\r\n    | TOrderActions\r\n    | TUserActions\r\n    | TWSActions;\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n\r\nexport type AppThunk<ReturnType = void> = ActionCreator<ThunkAction<ReturnType, Action, RootState, TAppActions>>;\r\n\r\nexport interface ILocation {\r\n    from?: string\r\n    background?: any\r\n    pathname?: string\r\n}\r\n","import React, { FC } from 'react';\r\nimport classNames from 'classnames';\r\nimport { BurgerIcon, ListIcon, Logo, ProfileIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { NavLink, useLocation } from 'react-router-dom';\r\n\r\nimport styles from './AppHeader.module.css';\r\nimport { EnumIconType, NavItemProps } from '../../utils/types';\r\n\r\nconst getIcon = (type: EnumIconType, isActive: boolean): JSX.Element => {\r\n    switch (type) {\r\n        case EnumIconType.CONSTRUCTOR:\r\n            return <BurgerIcon type={isActive ? 'primary' : 'secondary'} />;\r\n        case EnumIconType.ORDER_QUEUE:\r\n            return <ListIcon type={isActive ? 'primary' : 'secondary'} />;\r\n        case EnumIconType.LK:\r\n            return <ProfileIcon type={isActive ? 'primary' : 'secondary'} />;\r\n    }\r\n};\r\n\r\nconst NavItem: FC<NavItemProps & { type: EnumIconType }> = ({ to, text, type }) => {\r\n    const { pathname } = useLocation();\r\n    const isActive = to === pathname;\r\n\r\n    return (\r\n        <NavLink\r\n            className={classNames(styles.navLink, 'm-2 text text_type_main-default')}\r\n            to={to}\r\n            exact\r\n            activeClassName={styles.isActive}\r\n        >\r\n            {getIcon(type, isActive)} <span className={classNames(styles.text, 'ml-2')}>{text}</span>\r\n        </NavLink>\r\n    );\r\n};\r\n\r\nexport const AppHeader: FC = () => {\r\n    return (\r\n        <header className={classNames(styles.wrapper, 'p-5')}>\r\n            <nav className={styles.nav}>\r\n                <section className={styles.leftBlock}>\r\n                    <NavItem to=\"/\" text=\"Конструктор\" type={EnumIconType.CONSTRUCTOR} />\r\n                    <NavItem to=\"/feed\" text=\"Лента заказов\" type={EnumIconType.ORDER_QUEUE} />\r\n                </section>\r\n                <section className={styles.centralBlock}>\r\n                    <Logo />\r\n                </section>\r\n                <section className={styles.rightBlock}>\r\n                    <NavItem to=\"/profile/orders\" text=\"Личный кабинет\" type={EnumIconType.LK} />\r\n                </section>\r\n            </nav>\r\n        </header>\r\n    );\r\n};\r\n","const BASIC_URL = 'norma.nomoreparties.space';\r\n\r\nconst getUrl = (type: 'HTTP' | 'WS', uri: string) => {\r\n    switch (type) {\r\n        case 'HTTP':\r\n            return `https://${BASIC_URL}/api/${uri}`;\r\n        case 'WS':\r\n            return `wss://${BASIC_URL}/${uri}`;\r\n    }\r\n};\r\n\r\nexport const WSS_ALL_ORDERS_URL = getUrl('WS', 'orders/all');\r\nexport const WSS_USER_ORDERS_URL = getUrl('WS', `orders?token=`);\r\n\r\nexport const API_INGREDIENTS_URL = getUrl('HTTP', 'ingredients');\r\nexport const API_ORDERS_URL = getUrl('HTTP', 'orders');\r\nexport const API_AUTH_URL = getUrl('HTTP', 'auth');\r\nexport const API_PASSWORD_RESET_URL = getUrl('HTTP', 'password-reset');\r\n\r\nexport const API_LOGIN_URL = API_AUTH_URL + '/login';           // - эндпоинт для авторизации.\r\nexport const API_LOGOUT_URL = API_AUTH_URL + '/logout';         // - эндпоинт для выхода из системы.\r\nexport const API_REGISTER_URL = API_AUTH_URL + '/register';     // - эндпоинт для регистрации пользователя.\r\nexport const API_TOKEN_URL = API_AUTH_URL + '/token';           // - эндпоинт обновления токена.\r\n\r\nexport const API_USER_URL = API_AUTH_URL + '/user';\r\n\r\nexport const API_PASSWORD_RESET_CONFIRMATION_URL = API_PASSWORD_RESET_URL + '/reset';\r\n","import {IIngredientList, IngredientType, OrderedIngredient} from './types';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nexport const setCookie = (name: string, value: string, options: any = {}) => {\r\n    options = { path: '/', ...options };\r\n\r\n    if (options.expires instanceof Date) {\r\n        options.expires = options.expires.toUTCString();\r\n    }\r\n\r\n    let updatedCookie = encodeURIComponent(name) + '=' + encodeURIComponent(value);\r\n\r\n    for (let optionKey in options) {\r\n        updatedCookie += '; ' + optionKey;\r\n        let optionValue = options[optionKey];\r\n        if (optionValue !== true) {\r\n            updatedCookie += '=' + optionValue;\r\n        }\r\n    }\r\n\r\n    document.cookie = updatedCookie;\r\n};\r\n\r\nexport const getCookie = (name: string) => {\r\n    const matches = document.cookie.match(\r\n        /* eslint-disable */\r\n        new RegExp('(?:^|; )' + name.replace(/([.\\\\+\\-*:\\/?!|^${}()\\[\\]])/g, '\\\\$1') + '=([^;]*)')\r\n    );\r\n    return matches ? decodeURIComponent(matches[1]) : undefined;\r\n};\r\n\r\nexport const getClearAccessToken = () => {\r\n    return getCookie('accessToken')?.split('Bearer ')[1];\r\n};\r\n\r\nexport const deleteCookie = (name: string) => {\r\n    setCookie(name, '', {\r\n        'max-age': -1\r\n    });\r\n};\r\n\r\nexport const calculateOrderCost = (ingredients: IngredientType[]) => {\r\n    return ingredients.reduce((sum, ingredient) => {\r\n        return ingredient ? sum + ingredient.price : sum;\r\n    }, 0);\r\n};\r\n\r\nexport const diffDates = (checkedData: Date) => {\r\n    const now = new Date();\r\n    const result = now.getTime() - checkedData.getTime();\r\n    return  result / (1000 * 3600 * 24);\r\n};\r\n\r\nexport const dateParse = (createdAt: string): string => {\r\n    const createdDate = new Date(createdAt);\r\n    const daysDiff = diffDates(createdDate);\r\n    let dayString;\r\n\r\n    if (daysDiff < 1) {\r\n        dayString = `Сегодня`;\r\n    } else if (daysDiff < 2) {\r\n        dayString = `Вчера`;\r\n    } else {\r\n        dayString = `${Math.ceil(daysDiff)} дня назад`;\r\n    }\r\n\r\n    return `${dayString} ${createdDate.toLocaleTimeString('ru-Ru', {\r\n        hour: 'numeric',\r\n        minute: 'numeric'\r\n    })}`;\r\n};\r\n\r\nexport const getOrderIngredients = (orderIngredients: IngredientType[]): IIngredientList => {\r\n    return orderIngredients.reduce((result, ingredientItem) => {\r\n        return { ...result, [ingredientItem._id]: ingredientItem };\r\n    }, {});\r\n};\r\n\r\nexport const getIngredientWithOrderHash = (ingredient: OrderedIngredient) => ({\r\n        ...ingredient,\r\n        orderId: ingredient.orderId ? ingredient.orderId : uuid()\r\n});","import {\r\n    API_INGREDIENTS_URL,\r\n    API_LOGIN_URL,\r\n    API_LOGOUT_URL,\r\n    API_ORDERS_URL,\r\n    API_PASSWORD_RESET_CONFIRMATION_URL,\r\n    API_PASSWORD_RESET_URL,\r\n    API_REGISTER_URL,\r\n    API_TOKEN_URL,\r\n    API_USER_URL\r\n} from './constants';\r\nimport { getCookie, setCookie } from './helpers';\r\n\r\nconst checkResponse = (response: Response) => {\r\n    return response.ok\r\n        ? response.json()\r\n        : response.json()\r\n              .then((err: Error) => Promise.reject(err))\r\n};\r\n\r\nfunction request(url: string, options?: RequestInit) {\r\n    return fetch(url, options).then(checkResponse);\r\n}\r\n\r\nconst saveTokens = (refreshToken: string, accessToken: string) => {\r\n    setCookie('accessToken', accessToken);\r\n    setCookie('refreshToken', refreshToken);\r\n};\r\n\r\nexport const refreshTokenRequest = () => {\r\n    return request(API_TOKEN_URL, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json;charset=utf-8'\r\n        },\r\n        body: JSON.stringify({\r\n            token: getCookie('refreshToken')\r\n        })\r\n    });\r\n};\r\n\r\nexport const fetchWithRefresh = async (url: string, options: any) => {\r\n    try {\r\n        const res = await fetch(url, options);\r\n        return await checkResponse(res);\r\n    } catch (err: any) {\r\n        if (err.message === 'jwt expired') {\r\n            const { refreshToken, accessToken } = await refreshTokenRequest();\r\n            saveTokens(refreshToken, accessToken);\r\n            options.headers.authorization = accessToken;\r\n\r\n            const res = await fetch(url, options);\r\n            return await checkResponse(res);\r\n        } else {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n};\r\n\r\nexport const sendOrder = (orderList: string[]) => {\r\n    const accessToken = getCookie('accessToken');\r\n    let headers = { 'Content-Type': 'application/json' };\r\n\r\n    if (accessToken) {\r\n        headers = Object.assign(headers, { authorization: accessToken });\r\n    }\r\n\r\n    let options = {\r\n        method: 'POST',\r\n        body: JSON.stringify({ ingredients: [...orderList] }),\r\n        headers: headers\r\n    };\r\n    return request(API_ORDERS_URL, options);\r\n};\r\n\r\nexport const getIngredients = () => {\r\n    return request(API_INGREDIENTS_URL);\r\n};\r\n\r\nexport const login = (email: string, password: string) => {\r\n    return request(API_LOGIN_URL, {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n            email: email,\r\n            password: password\r\n        }),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }).then(resp => {\r\n        saveTokens(resp.refreshToken, resp.accessToken);\r\n        return resp;\r\n    });\r\n};\r\n\r\nexport const logout = () => {\r\n    return request(API_LOGOUT_URL, {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n            token: getCookie('refreshToken')\r\n        }),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    });\r\n};\r\n\r\nexport const userRegister = (email: string, password: string, name: string) => {\r\n    return fetchWithRefresh(API_REGISTER_URL, {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n            email: email,\r\n            password: password,\r\n            name: name\r\n        }),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }).then(resp => {\r\n        saveTokens(resp.refreshToken, resp.accessToken);\r\n        return resp;\r\n    });\r\n};\r\n\r\nexport const passwordReset = (email: string) => {\r\n    return request(API_PASSWORD_RESET_URL, {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n            email: email\r\n        }),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    });\r\n};\r\n\r\nexport const passwordResetConfirmation = (password: string, token: string) => {\r\n    return request(API_PASSWORD_RESET_CONFIRMATION_URL, {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n            password: password,\r\n            token: token\r\n        }),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    });\r\n};\r\n\r\nexport const getUserApiData = () => {\r\n    return fetchWithRefresh(API_USER_URL, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            authorization: getCookie('accessToken')\r\n        }\r\n    });\r\n};\r\n\r\nexport const setUserApiData = (email: string, password: string, name: string) => {\r\n    return fetchWithRefresh(API_USER_URL, {\r\n        method: 'PATCH',\r\n        body: JSON.stringify({\r\n            email: email,\r\n            password: password,\r\n            name: name\r\n        }),\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            authorization: getCookie('accessToken')\r\n        }\r\n    });\r\n};\r\n","import { EnumModalType } from '../../utils/types';\r\n\r\nexport const APPEND_MODAL_TYPE: 'APPEND_MODAL_TYPE' = 'APPEND_MODAL_TYPE';\r\nexport const APPEND_ERROR_MODAL_TYPE: 'APPEND_ERROR_MODAL_TYPE' = 'APPEND_ERROR_MODAL_TYPE';\r\nexport const REMOVE_MODAL_TYPE: 'REMOVE_MODAL_TYPE' = 'REMOVE_MODAL_TYPE';\r\n\r\nexport interface IAppendModalType {\r\n    readonly type: typeof APPEND_MODAL_TYPE;\r\n    modalType: EnumModalType;\r\n}\r\n\r\ninterface IAppendErrorModalType {\r\n    readonly type: typeof APPEND_ERROR_MODAL_TYPE;\r\n    status?: string | null;\r\n    message: string | null;\r\n}\r\n\r\ninterface IRemoveModalTypeE {\r\n    readonly type: typeof REMOVE_MODAL_TYPE;\r\n}\r\n\r\nexport type TModalActions = IAppendModalType | IRemoveModalTypeE | IAppendErrorModalType;","import { getUserApiData, login, logout, setUserApiData, userRegister } from '../../utils/api';\r\nimport { APPEND_ERROR_MODAL_TYPE } from './Modal';\r\nimport { IError, TUserInfoData } from '../../utils/types';\r\nimport { Dispatch } from 'react';\r\n\r\nexport const GET_USER_REQUEST: 'GET_USER_REQUEST' = 'GET_USER_REQUEST';\r\nexport const GET_USER_SUCCESS: 'GET_USER_SUCCESS' = 'GET_USER_SUCCESS';\r\nexport const GET_USER_FAILED: 'GET_USER_FAILED' = 'GET_USER_FAILED';\r\nexport const SET_NEED_AUTH: 'SET_NEED_AUTH' = 'SET_NEED_AUTH';\r\n\r\nexport const LOGOUT_USER: 'LOGOUT_USER' = 'LOGOUT_USER';\r\n\r\ninterface IGetUserRequest {\r\n    readonly type: typeof GET_USER_REQUEST;\r\n}\r\n\r\ninterface IGetUserSuccess {\r\n    readonly type: typeof GET_USER_SUCCESS;\r\n    data: TUserInfoData;\r\n    accessToken?: string;\r\n}\r\n\r\ninterface IGetUserFailed {\r\n    readonly type: typeof GET_USER_FAILED;\r\n}\r\n\r\ninterface ISetIsNeedAuth {\r\n    readonly type: typeof SET_NEED_AUTH;\r\n}\r\n\r\ninterface ILogoutUser {\r\n    readonly type: typeof LOGOUT_USER;\r\n}\r\n\r\nexport type TUserActions = IGetUserRequest | IGetUserSuccess | IGetUserFailed | ILogoutUser | ISetIsNeedAuth;\r\n\r\nexport const loginUser = (email: string, password: string) => {\r\n    return function (dispatch: Dispatch<IGetUserRequest | IGetUserSuccess | IGetUserFailed | IError>) {\r\n        dispatch({\r\n            type: GET_USER_REQUEST\r\n        });\r\n        login(email, password)\r\n            .then(res => {\r\n                if (res && res.success) {\r\n                    dispatch({\r\n                        type: GET_USER_SUCCESS,\r\n                        data: res.user,\r\n                        accessToken: res.accessToken\r\n                    });\r\n                } else {\r\n                    dispatch({\r\n                        type: GET_USER_FAILED\r\n                    });\r\n                }\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type: APPEND_ERROR_MODAL_TYPE,\r\n                    message: err.message\r\n                });\r\n            });\r\n    };\r\n};\r\n\r\nexport const logoutUser = () => {\r\n    return function (dispatch: Dispatch<ILogoutUser | IError>) {\r\n        logout()\r\n            .then(res => {\r\n                if (res && res.success) {\r\n                    dispatch({\r\n                        type: LOGOUT_USER\r\n                    });\r\n                }\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type: APPEND_ERROR_MODAL_TYPE,\r\n                    message: err.message\r\n                });\r\n            });\r\n    };\r\n};\r\n\r\nexport const getUserData = () => {\r\n    return function (dispatch: Dispatch<IGetUserSuccess | IGetUserFailed | ILogoutUser | ISetIsNeedAuth>) {\r\n        getUserApiData()\r\n            .then(res => {\r\n                if (res && res.success) {\r\n                    dispatch({\r\n                        type: GET_USER_SUCCESS,\r\n                        data: res.user\r\n                    });\r\n                } else {\r\n                    dispatch({\r\n                        type: GET_USER_FAILED\r\n                    });\r\n                }\r\n            })\r\n            .catch(err => {\r\n                if (err.message === 'You should be authorised') {\r\n                    dispatch({\r\n                        type: SET_NEED_AUTH\r\n                    });\r\n                }\r\n            });\r\n    };\r\n};\r\n\r\nexport const patchUserData = (email: string, password: string, name: string) => {\r\n    return function (dispatch: Dispatch<IGetUserSuccess | IGetUserFailed | ILogoutUser>) {\r\n        setUserApiData(email, password, name)\r\n            .then(res => {\r\n                if (res && res.success) {\r\n                    dispatch({\r\n                        type: GET_USER_SUCCESS,\r\n                        data: res.user\r\n                    });\r\n                } else {\r\n                    dispatch({\r\n                        type: GET_USER_FAILED\r\n                    });\r\n                }\r\n            })\r\n            .catch(err => {\r\n                if (err.message === 'You should be authorised') {\r\n                    dispatch({\r\n                        type: LOGOUT_USER\r\n                    });\r\n                }\r\n            });\r\n    };\r\n};\r\n\r\nexport const registrationUser = (email: string, password: string, name: string) => {\r\n    return function (dispatch: Dispatch<IGetUserSuccess | IGetUserFailed | IError>) {\r\n        userRegister(email, password, name)\r\n            .then(res => {\r\n                if (res && res.success) {\r\n                    dispatch({\r\n                        type: GET_USER_SUCCESS,\r\n                        data: res.user,\r\n                        accessToken: res.accessToken\r\n                    });\r\n                } else {\r\n                    dispatch({\r\n                        type: GET_USER_FAILED\r\n                    });\r\n                }\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type: APPEND_ERROR_MODAL_TYPE,\r\n                    message: err.message\r\n                });\r\n            });\r\n    };\r\n};\r\n","import { getIngredients } from '../../utils/api';\r\nimport { APPEND_ERROR_MODAL_TYPE } from './Modal';\r\nimport { IError, IngredientType } from '../../utils/types';\r\nimport { Dispatch } from 'react';\r\n\r\nexport const GET_INGREDIENTS_REQUEST: 'GET_INGREDIENTS_REQUEST' = 'GET_INGREDIENTS_REQUEST';\r\nexport const GET_INGREDIENTS_SUCCESS: 'GET_INGREDIENTS_SUCCESS' = 'GET_INGREDIENTS_SUCCESS';\r\nexport const GET_INGREDIENTS_FAILED: 'GET_INGREDIENTS_FAILED' = 'GET_INGREDIENTS_FAILED';\r\n\r\ninterface IGetIngredientsRequest {\r\n    readonly type: typeof GET_INGREDIENTS_REQUEST;\r\n}\r\n\r\ninterface IGetIngredientsSuccess {\r\n    readonly type: typeof GET_INGREDIENTS_SUCCESS;\r\n    items: IngredientType[];\r\n}\r\n\r\ninterface IGetIngredientsFailed {\r\n    readonly type: typeof GET_INGREDIENTS_FAILED;\r\n}\r\n\r\nexport type TIngredientsActions = IGetIngredientsRequest | IGetIngredientsSuccess | IGetIngredientsFailed;\r\n\r\nexport const getIngredientsData = () => {\r\n    return function (dispatch: Dispatch<TIngredientsActions | IError>) {\r\n        dispatch({\r\n            type: GET_INGREDIENTS_REQUEST\r\n        });\r\n        getIngredients()\r\n            .then(res => {\r\n                if (res && res.success) {\r\n                    dispatch({\r\n                        type: GET_INGREDIENTS_SUCCESS,\r\n                        items: res.data\r\n                    });\r\n                } else {\r\n                    dispatch({\r\n                        type: GET_INGREDIENTS_FAILED\r\n                    });\r\n                }\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type: APPEND_ERROR_MODAL_TYPE,\r\n                    message: err.message\r\n                });\r\n            });\r\n    };\r\n};\r\n","import {\r\n    GET_INGREDIENTS_REQUEST,\r\n    GET_INGREDIENTS_SUCCESS,\r\n    GET_INGREDIENTS_FAILED,\r\n    TIngredientsActions\r\n} from '../actions/Ingredients';\r\nimport { IngredientType } from '../../utils/types';\r\n\r\nexport type TIngredientsState = {\r\n    ingredientsRequest: boolean;\r\n    ingredientsFailed: boolean;\r\n    ingredients: IngredientType[];\r\n};\r\n\r\nexport const InitialIngredientsState: TIngredientsState = {\r\n    ingredientsRequest: false,\r\n    ingredientsFailed: false,\r\n    ingredients: []\r\n};\r\n\r\nexport default function ingredientsReducer(\r\n    state: TIngredientsState = InitialIngredientsState,\r\n    action: TIngredientsActions\r\n) {\r\n    switch (action.type) {\r\n        case GET_INGREDIENTS_REQUEST: {\r\n            return {\r\n                ...state,\r\n                ingredientsRequest: true,\r\n                ingredientsFailed: false\r\n            };\r\n        }\r\n        case GET_INGREDIENTS_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                ingredients: action.items,\r\n                ingredientsRequest: false\r\n            };\r\n        }\r\n        case GET_INGREDIENTS_FAILED: {\r\n            return {\r\n                ...state,\r\n                ingredientsFailed: true,\r\n                ingredientsRequest: false\r\n            };\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n","import { OrderedIngredient } from '../../utils/types';\r\n\r\nexport const ADD_INGREDIENT: 'ADD_INGREDIENT' = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT: 'REMOVE_INGREDIENT' = 'REMOVE_INGREDIENT';\r\nexport const MOVE_INGREDIENT: 'MOVE_INGREDIENT' = 'MOVE_INGREDIENT';\r\n\r\ninterface IAddIngredient {\r\n    readonly type: typeof ADD_INGREDIENT;\r\n    ingredient: OrderedIngredient;\r\n}\r\n\r\ninterface IRemoveIngredient {\r\n    readonly type: typeof REMOVE_INGREDIENT;\r\n    ingredient: OrderedIngredient;\r\n}\r\n\r\ninterface IMoveIngredient {\r\n    readonly type: typeof MOVE_INGREDIENT;\r\n    ingredient: OrderedIngredient;\r\n    newIndex: number;\r\n}\r\n\r\nexport type TIngredientActions = IAddIngredient | IRemoveIngredient | IMoveIngredient;","import { ADD_INGREDIENT, MOVE_INGREDIENT, REMOVE_INGREDIENT, TIngredientActions } from '../actions/Constructor';\r\nimport { EnumIngredientType, OrderedIngredient } from '../../utils/types';\r\nimport {getIngredientWithOrderHash} from \"../../utils/helpers\";\r\n\r\ntype TConstructorState = {\r\n    bun: OrderedIngredient | null;\r\n    ingredients: OrderedIngredient[];\r\n    totalPrice: number;\r\n};\r\n\r\nexport const InitialConstructorState: TConstructorState = {\r\n    bun: null,\r\n    ingredients: [],\r\n    totalPrice: 0\r\n};\r\n\r\nexport default function constructorReducer(\r\n    state: TConstructorState = InitialConstructorState,\r\n    action: TIngredientActions\r\n) {\r\n    switch (action.type) {\r\n        case ADD_INGREDIENT:\r\n            if (action.ingredient.type === EnumIngredientType.BUN) {\r\n                const totalPriceWithoutBun = state.bun ? state.totalPrice - state.bun.price * 2 : state.totalPrice;\r\n\r\n                return {\r\n                    ...state,\r\n                    bun: action.ingredient,\r\n                    totalPrice: totalPriceWithoutBun + action.ingredient.price * 2\r\n                };\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                ingredients: [\r\n                    ...state.ingredients,\r\n                    { ...getIngredientWithOrderHash(action.ingredient), orderIndex: state.ingredients.length }\r\n                ],\r\n                totalPrice: state.totalPrice + action.ingredient.price\r\n            };\r\n        case REMOVE_INGREDIENT:\r\n            if (!state.ingredients.length) {\r\n                return state;\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                ingredients: [\r\n                    ...state.ingredients.filter(ingredient => ingredient.orderId !== action.ingredient.orderId)\r\n                ],\r\n                totalPrice: state.totalPrice - action.ingredient.price\r\n            };\r\n        case MOVE_INGREDIENT:\r\n            if (state.ingredients[action.newIndex].orderId === action.ingredient?.orderId) {\r\n                return state;\r\n            }\r\n\r\n            const OrderListWithoutMovedItem = [...state.ingredients].filter(\r\n                item => item.orderId !== action.ingredient?.orderId\r\n            );\r\n\r\n            const newIngredientsOrderList = [\r\n                ...OrderListWithoutMovedItem.slice(0, action.newIndex),\r\n                getIngredientWithOrderHash(action.ingredient),\r\n                ...OrderListWithoutMovedItem.slice(action.newIndex, state.ingredients.length + 1)\r\n            ];\r\n\r\n            return {\r\n                ...state,\r\n                ingredients: newIngredientsOrderList.map((item, index) => ({ ...item, orderIndex: index }))\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { IngredientType } from '../../utils/types';\r\n\r\nexport const ADD_INGREDIENT_DETAILS: 'ADD_INGREDIENT_DETAILS' = 'ADD_INGREDIENT_DETAILS';\r\nexport const REMOVE_INGREDIENT_DETAILS: 'REMOVE_INGREDIENT_DETAILS' = 'REMOVE_INGREDIENT_DETAILS';\r\n\r\ninterface IAddIngredientDetails {\r\n    readonly type: typeof ADD_INGREDIENT_DETAILS;\r\n    ingredient: IngredientType;\r\n}\r\n\r\ninterface IRemoveIngredientDetails {\r\n    readonly type: typeof REMOVE_INGREDIENT_DETAILS;\r\n}\r\n\r\nexport type TIngredientDetailsActions = IAddIngredientDetails | IRemoveIngredientDetails;","import {\r\n    ADD_INGREDIENT_DETAILS,\r\n    REMOVE_INGREDIENT_DETAILS,\r\n    TIngredientDetailsActions\r\n} from '../actions/IngredientDetails';\r\nimport { IngredientType } from '../../utils/types';\r\n\r\ntype TIngredientDetailsState = null | IngredientType;\r\n\r\nexport const InitialIngredientDetailsState: TIngredientDetailsState = null;\r\n\r\nexport default function ingredientDetailsReducer(\r\n    state = InitialIngredientDetailsState,\r\n    action: TIngredientDetailsActions\r\n) {\r\n    switch (action.type) {\r\n        case ADD_INGREDIENT_DETAILS:\r\n            return { ...action.ingredient };\r\n        case REMOVE_INGREDIENT_DETAILS:\r\n            return null;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { sendOrder } from '../../utils/api';\r\nimport { APPEND_ERROR_MODAL_TYPE, APPEND_MODAL_TYPE, IAppendModalType } from './Modal';\r\nimport { EnumModalType, IError } from '../../utils/types';\r\nimport { Dispatch } from 'react';\r\n\r\nexport const SENT_ORDER_REQUEST: 'SENT_ORDER_REQUEST' = 'SENT_ORDER_REQUEST';\r\nexport const SENT_ORDER_SUCCESS: 'SENT_ORDER_SUCCESS' = 'SENT_ORDER_SUCCESS';\r\nexport const SENT_ORDER_FAILED: 'SENT_ORDER_FAILED' = 'SENT_ORDER_FAILED';\r\n\r\ninterface ISendOrderRequest {\r\n    readonly type: typeof SENT_ORDER_REQUEST;\r\n}\r\n\r\ninterface ISendOrderSuccess {\r\n    readonly type: typeof SENT_ORDER_SUCCESS;\r\n    name: string;\r\n    number: number;\r\n}\r\n\r\ninterface ISendOrderFailed {\r\n    readonly type: typeof SENT_ORDER_FAILED;\r\n}\r\n\r\nexport type TOrderActions = ISendOrderRequest | ISendOrderSuccess | ISendOrderFailed;\r\n\r\nexport const sendOrderRequest = (orderList: string[]) => {\r\n    return function (dispatch: Dispatch<TOrderActions | IAppendModalType | IError>) {\r\n        dispatch({\r\n            type: SENT_ORDER_REQUEST\r\n        });\r\n        sendOrder(orderList)\r\n            .then(res => {\r\n                if (res && res.success) {\r\n                    dispatch({\r\n                        type: SENT_ORDER_SUCCESS,\r\n                        name: res.name,\r\n                        number: res.order.number\r\n                    });\r\n                    dispatch({ type: APPEND_MODAL_TYPE, modalType: EnumModalType.ORDER });\r\n                } else {\r\n                    dispatch({\r\n                        type: SENT_ORDER_FAILED\r\n                    });\r\n                }\r\n            })\r\n            .catch(err => {\r\n                dispatch({\r\n                    type: APPEND_ERROR_MODAL_TYPE,\r\n                    message: err.message\r\n                });\r\n            });\r\n    };\r\n};\r\n","import { SENT_ORDER_FAILED, SENT_ORDER_REQUEST, SENT_ORDER_SUCCESS, TOrderActions } from '../actions/Order';\r\n\r\ntype TOrderState = {\r\n    orderRequest: boolean;\r\n    orderFailed: boolean;\r\n    orderData: {\r\n        name: string | null;\r\n        number: number | null;\r\n    };\r\n};\r\n\r\nexport const InitialOrderState: TOrderState = {\r\n    orderRequest: false,\r\n    orderFailed: false,\r\n    orderData: {\r\n        name: null,\r\n        number: null\r\n    }\r\n};\r\n\r\nexport default function orderReducer(state: TOrderState = InitialOrderState, action: TOrderActions) {\r\n    switch (action.type) {\r\n        case SENT_ORDER_REQUEST: {\r\n            return {\r\n                ...state,\r\n                orderRequest: true,\r\n                orderFailed: false,\r\n                orderData: { name: null, number: null }\r\n            };\r\n        }\r\n        case SENT_ORDER_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                orderRequest: false,\r\n                orderData: { name: action.name, number: action.number }\r\n            };\r\n        }\r\n        case SENT_ORDER_FAILED: {\r\n            return {\r\n                ...state,\r\n                orderFailed: true,\r\n                orderRequest: false,\r\n                orderData: { name: null, number: null }\r\n            };\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n","import { APPEND_ERROR_MODAL_TYPE, APPEND_MODAL_TYPE, REMOVE_MODAL_TYPE, TModalActions } from '../actions/Modal';\r\nimport { EnumModalType } from '../../utils/types';\r\n\r\ntype TModalState = {\r\n    modalType: EnumModalType | null;\r\n    status?: string | null;\r\n    message: string | null;\r\n};\r\n\r\nexport const InitialModalState: TModalState = {\r\n    modalType: null,\r\n    status: null,\r\n    message: null\r\n};\r\n\r\nexport default function modalReducer(state: TModalState = InitialModalState, action: TModalActions) {\r\n    switch (action.type) {\r\n        case APPEND_MODAL_TYPE: {\r\n            return {\r\n                ...state,\r\n                modalType: action.modalType\r\n            };\r\n        }\r\n        case APPEND_ERROR_MODAL_TYPE: {\r\n            return {\r\n                ...state,\r\n                modalType: EnumModalType.ERROR,\r\n                status: action?.status ? action.status : state.status,\r\n                message: action?.message ? action.message : state.message\r\n            };\r\n        }\r\n        case REMOVE_MODAL_TYPE: {\r\n            return {\r\n                ...state,\r\n                modalType: null,\r\n                status: null\r\n            };\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n","import { deleteCookie } from '../../utils/helpers';\r\nimport {\r\n    GET_USER_FAILED,\r\n    GET_USER_REQUEST,\r\n    GET_USER_SUCCESS,\r\n    LOGOUT_USER,\r\n    SET_NEED_AUTH,\r\n    TUserActions\r\n} from '../actions/User';\r\n\r\ntype TUserState = {\r\n    data: any;\r\n    accessToken: string | null;\r\n    needAuth: boolean;\r\n    userRequest: boolean;\r\n    userFailed: boolean;\r\n};\r\n\r\nexport const InitialUserState: TUserState = {\r\n    data: null,\r\n    accessToken: null,\r\n    needAuth: false,\r\n    userRequest: false,\r\n    userFailed: false\r\n};\r\n\r\nexport default function userReducer(state: TUserState = InitialUserState, action: TUserActions) {\r\n    switch (action.type) {\r\n        case GET_USER_REQUEST: {\r\n            return {\r\n                ...state,\r\n                userRequest: true,\r\n                userFailed: false\r\n            };\r\n        }\r\n        case GET_USER_SUCCESS: {\r\n            const newState = {\r\n                ...state,\r\n                data: action.data,\r\n                userRequest: false,\r\n                needAuth: false,\r\n                accessToken: state.accessToken\r\n            };\r\n\r\n            if (action.accessToken) {\r\n                newState.accessToken = action.accessToken;\r\n            }\r\n\r\n            return newState;\r\n        }\r\n        case GET_USER_FAILED: {\r\n            return {\r\n                ...state,\r\n                userFailed: true,\r\n                userRequest: false\r\n            };\r\n        }\r\n        case SET_NEED_AUTH: {\r\n            return {\r\n                ...state,\r\n                needAuth: true\r\n            };\r\n        }\r\n        case LOGOUT_USER: {\r\n            deleteCookie('refreshToken');\r\n            deleteCookie('accessToken');\r\n            return { ...state, data: null, accessToken: null };\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n","export const WS_CONNECTION_START: 'WS_CONNECTION_START' = 'WS_CONNECTION_START';\r\nexport const WS_CONNECTION_SUCCESS: 'WS_CONNECTION_SUCCESS' = 'WS_CONNECTION_SUCCESS';\r\nexport const WS_CONNECTION_ERROR: 'WS_CONNECTION_ERROR' = 'WS_CONNECTION_ERROR';\r\nexport const WS_GET_MESSAGE: 'WS_GET_MESSAGE' = 'WS_GET_MESSAGE';\r\nexport const WS_SEND_MESSAGE: 'WS_SEND_MESSAGE' = 'WS_SEND_MESSAGE';\r\nexport const WS_CONNECTION_CLOSED: 'WS_CLOSE_CONNECTION' = 'WS_CLOSE_CONNECTION';\r\n\r\ninterface IWSConnectionStart {\r\n    readonly type: typeof WS_CONNECTION_START;\r\n    payload?: any;\r\n}\r\n\r\ninterface IWSConnectionSuccess {\r\n    readonly type: typeof WS_CONNECTION_SUCCESS;\r\n    payload?: any;\r\n}\r\n\r\ninterface IWSConnectionError {\r\n    readonly type: typeof WS_CONNECTION_ERROR;\r\n    payload?: any;\r\n}\r\n\r\ninterface IWSGetMessage {\r\n    readonly type: typeof WS_GET_MESSAGE;\r\n    payload?: any;\r\n}\r\n\r\ninterface IWSSendMessage {\r\n    readonly type: typeof WS_SEND_MESSAGE;\r\n    payload?: any;\r\n}\r\n\r\ninterface IWSCloseConnection {\r\n    readonly type: typeof WS_CONNECTION_CLOSED;\r\n    payload?: any;\r\n}\r\n\r\nexport const wsActions = {\r\n    wsInit: WS_CONNECTION_START,\r\n    wsSendMessage: WS_SEND_MESSAGE,\r\n    onOpen: WS_CONNECTION_SUCCESS,\r\n    onClose: WS_CONNECTION_CLOSED,\r\n    onError: WS_CONNECTION_ERROR,\r\n    onMessage: WS_GET_MESSAGE\r\n};\r\n\r\nexport type TWSActions =\r\n    | IWSConnectionStart\r\n    | IWSConnectionSuccess\r\n    | IWSConnectionError\r\n    | IWSGetMessage\r\n    | IWSSendMessage\r\n    | IWSCloseConnection;","import type { Middleware, MiddlewareAPI } from 'redux';\r\nimport { AppDispatch, RootState } from '../reducers/Root';\r\n\r\nexport const socketMiddleware = (wsActions: { [key: string]: any }): Middleware => {\r\n    return ((store: MiddlewareAPI<AppDispatch, RootState>) => {\r\n        let socket: WebSocket | null = null;\r\n\r\n        return next => action => {\r\n            const { dispatch, getState } = store;\r\n            const { type, payload } = action;\r\n            const { wsInit, wsSendMessage, onOpen, onClose, onError, onMessage } = wsActions;\r\n            const user = getState().user;\r\n\r\n            if (type === wsInit && user) {\r\n                socket = new WebSocket(payload.url);\r\n            }\r\n\r\n            if (socket) {\r\n                socket.onopen = event => {\r\n                    dispatch({ type: onOpen, payload: event });\r\n                };\r\n\r\n                socket.onerror = event => {\r\n                    dispatch({ type: onError, payload: event });\r\n                };\r\n\r\n                socket.onmessage = event => {\r\n                    const { data } = event;\r\n                    const dataObject = JSON.parse(data);\r\n                    dispatch({ type: onMessage, payload: dataObject?.orders });\r\n                };\r\n\r\n                socket.onclose = event => {\r\n                    dispatch({ type: onClose, payload: event });\r\n                };\r\n\r\n                if (type === wsSendMessage) {\r\n                    const message = { ...payload, token: user.accessToken };\r\n                    socket.send(JSON.stringify(message));\r\n                }\r\n            }\r\n\r\n            next(action);\r\n        };\r\n    }) as Middleware;\r\n};","import {\r\n    TWSActions,\r\n    WS_CONNECTION_ERROR,\r\n    WS_CONNECTION_START,\r\n    WS_CONNECTION_SUCCESS,\r\n    WS_GET_MESSAGE\r\n} from '../actions/WebSocket';\r\nimport { OrderType } from '../../utils/types';\r\n\r\ntype TOrderListState = {\r\n    ordersRequest: boolean;\r\n    ordersFailed: boolean;\r\n    data: OrderType[];\r\n};\r\n\r\nexport const initialState: TOrderListState = {\r\n    ordersRequest: false,\r\n    ordersFailed: false,\r\n    data: []\r\n};\r\n\r\nconst orderListReducer = (state: TOrderListState = initialState, action: TWSActions) => {\r\n    switch (action.type) {\r\n        case WS_CONNECTION_START: {\r\n            return {\r\n                ...state,\r\n                ordersRequest: true\r\n            };\r\n        }\r\n        case WS_CONNECTION_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                ordersRequest: false,\r\n                ordersFailed: false,\r\n            };\r\n        }\r\n        case WS_CONNECTION_ERROR: {\r\n            return {\r\n                ...state,\r\n                ordersFailed: true,\r\n                ordersRequest: false\r\n            };\r\n        }\r\n        case WS_GET_MESSAGE: {\r\n            return {\r\n                ...state,\r\n                ordersFailed: false,\r\n                data: action.payload as OrderType[]\r\n            };\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\nexport default orderListReducer;","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\n\r\nimport ingredients, { InitialIngredientsState } from './Ingredients';\r\nimport constructor, { InitialConstructorState } from './Constructor';\r\nimport ingredientDetails, { InitialIngredientDetailsState } from './IngredientDetails';\r\nimport order, { InitialOrderState } from './Order';\r\nimport modal, { InitialModalState } from './Modal';\r\nimport user, { InitialUserState } from './User';\r\nimport orderList from './OrderList';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport { socketMiddleware } from '../middleware/socket';\r\nimport { wsActions } from '../actions/WebSocket';\r\nimport { AppThunk, TInitialState } from '../../utils/types';\r\n\r\nexport const rootReducer = combineReducers({\r\n    ingredients,\r\n    constructor,\r\n    ingredientDetails,\r\n    order,\r\n    modal,\r\n    user,\r\n    orderList\r\n});\r\n\r\ndeclare global {\r\n    interface Window {\r\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n    }\r\n}\r\n\r\nexport const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst enhancer = composeEnhancers(applyMiddleware(thunkMiddleware, socketMiddleware(wsActions)));\r\n\r\nconst initialState: TInitialState = {\r\n    ingredients: InitialIngredientsState,\r\n    constructor: InitialConstructorState,\r\n    ingredientDetails: InitialIngredientDetailsState,\r\n    order: InitialOrderState,\r\n    modal: InitialModalState,\r\n    user: InitialUserState\r\n};\r\n\r\nexport const store = createStore(rootReducer, initialState, enhancer);\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport const useAppDispatch: () => AppDispatch | AppThunk = useDispatch;\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;","import React, { FC, MouseEventHandler } from 'react';\r\n\r\nimport styles from './ModalOverlay.module.css';\r\n\r\nconst ModalOverlay: FC<{ onClose: MouseEventHandler<HTMLDivElement> }> = ({ onClose, children }) => {\r\n    return (\r\n        <div className={styles.wrapper} onClick={onClose}>\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ModalOverlay;\r\n","import ReactDOM from 'react-dom';\r\nimport { FC, MouseEvent, useEffect } from 'react';\r\nimport { CloseIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nimport styles from './Modal.module.css';\r\nimport ModalOverlay from './ModalOverlay/ModalOverlay';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst modalRoot: any = document.getElementById('modal');\r\n\r\ntype ModalProps = {\r\n    title?: string;\r\n    onClose?: any;\r\n};\r\n\r\nconst Modal: FC<ModalProps> = ({ title, onClose, children }) => {\r\n    const history = useHistory();\r\n    const defaultCloseHandler = () => {\r\n        history.goBack();\r\n    };\r\n\r\n    useEffect(() => {\r\n        const handleEscape = (e: KeyboardEvent) => {\r\n            if (e.key === 'Escape') {\r\n                onClose(e);\r\n            }\r\n        };\r\n\r\n        window.addEventListener('keydown', handleEscape);\r\n        return () => window.removeEventListener('keydown', handleEscape);\r\n    }, [onClose]);\r\n\r\n    const stopPropagation = (e: MouseEvent<HTMLDivElement>) => {\r\n        e.stopPropagation();\r\n    };\r\n\r\n    return ReactDOM.createPortal(\r\n        <ModalOverlay onClose={onClose}>\r\n            <div className={`pt-10 pl-10 pr-10 ${styles.wrapper}`} onClick={stopPropagation}>\r\n                <div className={styles.header}>\r\n                    <h3 className={`text text_type_main-large ${styles.title}`}>{title}</h3>\r\n                    <button onClick={onClose ?? defaultCloseHandler} className={`pt-5 ${styles.button}`} id=\"close_modal\">\r\n                        <CloseIcon type=\"primary\" />\r\n                    </button>\r\n                </div>\r\n                {children}\r\n            </div>\r\n        </ModalOverlay>,\r\n        modalRoot\r\n    );\r\n};\r\n\r\nexport default Modal;\r\n","import { IngredientType } from './types';\r\n\r\nexport const getIngredientsGroups = (ingredients: IngredientType[]) => {\r\n    return ingredients.reduce(\r\n        (previousValue, currentValue) => {\r\n            return { ...previousValue, [currentValue.type]: [...previousValue[currentValue.type], currentValue] };\r\n        },\r\n        { bun: [], main: [], sauce: [] }\r\n    );\r\n};\r\n\r\nexport const getOrderIngredientsIDs = (orderIngredients: IngredientType[]): string[] => {\r\n    const result:string[] = [];\r\n    orderIngredients.forEach(item => {\r\n        if (item.type === 'bun') {\r\n            result.push(item._id);\r\n        }\r\n        result.push(item._id);\r\n    });\r\n\r\n    return result;\r\n};\r\n","import React, { FC } from 'react';\r\nimport classNames from 'classnames';\r\nimport { useDrag } from 'react-dnd';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { Counter, CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nimport styles from './IngredientItem.module.css';\r\nimport { IngredientType, LocationProps } from '../../../utils/types';\r\nimport { getOrderIngredientsIDs } from '../../../utils/getIngredientsGroups';\r\nimport { ADD_INGREDIENT_DETAILS } from '../../../services/actions/IngredientDetails';\r\nimport { useAppDispatch, useAppSelector } from '../../../services/reducers/Root';\r\n\r\nconst IngredientItem: FC<{ ingredient: IngredientType }> = ({ ingredient }) => {\r\n    const location = useLocation() as unknown as LocationProps;\r\n    const dispatch = useAppDispatch();\r\n    const ingredientId = ingredient._id;\r\n\r\n    const { ingredients, bun } = useAppSelector(state => state.constructor);\r\n    const showIngredientDetails = () => {\r\n        dispatch({ type: ADD_INGREDIENT_DETAILS, ingredient: ingredient });\r\n    };\r\n    const getCount = (ingredient: IngredientType, orderIngredientList: IngredientType[] = []) => {\r\n        if (ingredient.type === 'bun') {\r\n            return ingredient._id === bun?._id ? 2 : null;\r\n        }\r\n        return orderIngredientList.length\r\n            ? getOrderIngredientsIDs(orderIngredientList).filter(id => id === ingredient._id).length\r\n            : 0;\r\n    };\r\n    const count = getCount(ingredient, ingredients);\r\n    const [, dragRef] = useDrag({\r\n        type: 'ingredient',\r\n        item: ingredient,\r\n        collect: monitor => ({\r\n            isDrag: monitor.isDragging()\r\n        })\r\n    });\r\n\r\n    return (\r\n        <Link\r\n            ref={dragRef}\r\n            key={ingredientId}\r\n            to={{\r\n                pathname: `/ingredients/${ingredientId}`,\r\n                state: { background: location }\r\n            }}\r\n            onClick={() => showIngredientDetails()}\r\n            className={classNames(styles.wrapper, 'mb-4')}\r\n        >\r\n            {!!count && <Counter count={count} size=\"default\" />}\r\n            <img className={'ml-4 mr-4 mb-1'} src={ingredient.image} alt={`Компонент: ${ingredient.name}`} />\r\n            <div className={classNames(styles.priceBlock, 'pt-1 pb-1')}>\r\n                <span className=\"text text_type_digits-default mr-2\">{ingredient.price}</span>\r\n                <CurrencyIcon type=\"primary\" />\r\n            </div>\r\n            <span className=\"text text_type_main-default pt-1\">{ingredient.name}</span>\r\n        </Link>\r\n    );\r\n};\r\n\r\nexport default IngredientItem;\r\n","import React, { FC } from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport styles from './IngredientsBlock.module.css';\r\nimport IngredientItem from '../IngredientItem/IngredientItem';\r\nimport { IngredientType } from '../../../utils/types';\r\n\r\ntype IngredientsBlockProps = {\r\n    title: string;\r\n    ingredients: IngredientType[];\r\n};\r\n\r\nconst IngredientsBlock: FC<IngredientsBlockProps> = ({ title, ingredients }) => {\r\n    return (\r\n        <>\r\n            <p className=\"text text_type_main-medium\">{title}</p>\r\n            <div className={classNames(styles.ingredientsBlock, 'pt-6 pr-2 pb-7 pl-2')}>\r\n                {ingredients.map(ingredient => (\r\n                    <IngredientItem key={ingredient._id} ingredient={ingredient} />\r\n                ))}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default IngredientsBlock;\r\n","import React, { FC } from 'react';\r\nimport { Tab } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport styles from './IngredientsTabs.module.css';\r\nimport { EnumIngredientType } from '../../../utils/types';\r\n\r\ntype IngredientsTabsProps = {\r\n    current: EnumIngredientType;\r\n    changeCurrentZone: any;\r\n};\r\n\r\nexport const IngredientsTabs: FC<IngredientsTabsProps> = ({ current, changeCurrentZone }) => {\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <Tab value={EnumIngredientType.BUN} active={current === EnumIngredientType.BUN} onClick={changeCurrentZone}>\r\n                Булки\r\n            </Tab>\r\n            <Tab\r\n                value={EnumIngredientType.SAUCE}\r\n                active={current === EnumIngredientType.SAUCE}\r\n                onClick={changeCurrentZone}\r\n            >\r\n                Соусы\r\n            </Tab>\r\n            <Tab\r\n                value={EnumIngredientType.MAIN}\r\n                active={current === EnumIngredientType.MAIN}\r\n                onClick={changeCurrentZone}\r\n            >\r\n                Начинки\r\n            </Tab>\r\n        </div>\r\n    );\r\n};\r\n","import React, { FC, useRef, useState, UIEvent } from 'react';\r\n\r\nimport styles from './BurgerIngredients.module.css';\r\nimport IngredientsBlock from './IngredientsBlock/IngredientsBlock';\r\nimport { IngredientsTabs } from './IngredientsTabs';\r\nimport { getIngredientsGroups } from '../../utils/getIngredientsGroups';\r\nimport { EnumIngredientType, IngredientType } from '../../utils/types';\r\nimport { useAppSelector } from '../../services/reducers/Root';\r\n\r\nconst BurgerIngredients: FC<{ ingredients: IngredientType[] }> = ({ ingredients }) => {\r\n    const [currentZone, setCurrentZone] = useState<EnumIngredientType>(EnumIngredientType.BUN);\r\n    const bunRef = useRef<HTMLInputElement>(null);\r\n    const sauceRef = useRef<HTMLInputElement>(null);\r\n    const mainRef = useRef<HTMLInputElement>(null);\r\n\r\n    const ingredientsByTypeList = getIngredientsGroups(ingredients);\r\n\r\n    const handleScroll = (e: UIEvent<HTMLDivElement>) => {\r\n        e.stopPropagation();\r\n        const currentPosition = e.currentTarget.scrollTop + e.currentTarget.offsetTop;\r\n        const bufZone =\r\n            sauceRef.current && bunRef.current\r\n                ? (sauceRef.current.offsetTop - bunRef.current.offsetTop) / 2 + bunRef.current.offsetTop\r\n                : 0;\r\n        const mainZone =\r\n            mainRef.current && sauceRef.current\r\n                ? (mainRef.current.offsetTop - sauceRef.current.offsetTop) / 2 + sauceRef.current.offsetTop\r\n                : 0;\r\n\r\n        if (currentPosition <= bufZone) {\r\n            setCurrentZone(EnumIngredientType.BUN);\r\n        } else if (currentPosition >= mainZone) {\r\n            setCurrentZone(EnumIngredientType.MAIN);\r\n        } else {\r\n            setCurrentZone(EnumIngredientType.SAUCE);\r\n        }\r\n    };\r\n\r\n    const changeCurrentZone = (zone: EnumIngredientType) => {\r\n        switch (zone) {\r\n            case EnumIngredientType.BUN:\r\n                bunRef.current?.scrollIntoView();\r\n                return;\r\n            case EnumIngredientType.MAIN:\r\n                mainRef.current?.scrollIntoView();\r\n                return;\r\n            case EnumIngredientType.SAUCE:\r\n                sauceRef.current?.scrollIntoView();\r\n                return;\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className={'pt-10 pb-5'}>\r\n                <p className=\"text text_type_main-large\">Соберите бургер</p>\r\n            </div>\r\n            <div className={'pb-10'}>\r\n                <IngredientsTabs current={currentZone} changeCurrentZone={changeCurrentZone} />\r\n            </div>\r\n            <div className={styles.ingredientsBlock} onScroll={handleScroll}>\r\n                <>\r\n                    <div ref={bunRef}>\r\n                        <IngredientsBlock title={'Булки'} ingredients={ingredientsByTypeList.bun} />\r\n                    </div>\r\n                    <div ref={sauceRef}>\r\n                        <IngredientsBlock title={'Соусы'} ingredients={ingredientsByTypeList.sauce} />\r\n                    </div>\r\n                    <div ref={mainRef}>\r\n                        <IngredientsBlock title={'Начинки'} ingredients={ingredientsByTypeList.main} />\r\n                    </div>\r\n                </>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst BurgerIngredientsContainer = () => {\r\n    const { ingredients, ingredientsRequest } = useAppSelector(state => state.ingredients);\r\n\r\n    if (ingredientsRequest && !ingredients.length) {\r\n        return null;\r\n    }\r\n\r\n    return <BurgerIngredients ingredients={ingredients} />;\r\n};\r\n\r\nexport default BurgerIngredientsContainer;\r\n","import React, { FC, useRef } from 'react';\r\nimport classNames from 'classnames';\r\nimport { useDrag, useDrop } from 'react-dnd';\r\nimport { ConstructorElement, DragIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nimport styles from './ConstructorIngredient.module.css';\r\nimport { MOVE_INGREDIENT, REMOVE_INGREDIENT } from '../../../services/actions/Constructor';\r\nimport { OrderedIngredient } from '../../../utils/types';\r\nimport { useAppDispatch } from '../../../services/reducers/Root';\r\n\r\nexport const ConstructorIngredient: FC<{ ingredient: OrderedIngredient }> = ({ ingredient }) => {\r\n    const dispatch = useAppDispatch();\r\n    const ref = useRef<HTMLLIElement>(null);\r\n    const onDeleteIngredient = (ingredient: OrderedIngredient) => {\r\n        dispatch({\r\n            type: REMOVE_INGREDIENT,\r\n            ingredient: ingredient\r\n        });\r\n    };\r\n\r\n    const moveCard = (ingredient: OrderedIngredient, oldIndex: number, newIndex: number) => {\r\n        dispatch({\r\n            type: MOVE_INGREDIENT,\r\n            ingredient,\r\n            oldIndex,\r\n            newIndex\r\n        });\r\n    };\r\n\r\n    const [, drop] = useDrop({\r\n        accept: 'movedIngredient',\r\n        hover(item: OrderedIngredient, monitor: any) {\r\n            if (!ref.current) {\r\n                return;\r\n            }\r\n            const dragIndex = item.orderIndex;\r\n            const hoverIndex = ingredient.orderIndex;\r\n\r\n            // Determine rectangle on screen\r\n            const hoverBoundingRect = ref.current?.getBoundingClientRect();\r\n            // Get vertical middle\r\n            const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\r\n            // Determine mouse position\r\n            const clientOffset = monitor.getClientOffset();\r\n            // Get pixels to the top\r\n            const hoverClientY = clientOffset.y - hoverBoundingRect.top;\r\n            if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n                return;\r\n            }\r\n            // Dragging upwards\r\n            if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n                return;\r\n            }\r\n            // Time to actually perform the action\r\n            moveCard(item, dragIndex, hoverIndex);\r\n            // Note: we're mutating the monitor item here!\r\n            // Generally it's better to avoid mutations,\r\n            // but it's good here for the sake of performance\r\n            // to avoid expensive index searches.\r\n            item.index = hoverIndex;\r\n        }\r\n    });\r\n\r\n    const [, drag] = useDrag({\r\n        type: 'movedIngredient',\r\n        item: () => {\r\n            return ingredient;\r\n        },\r\n        collect: monitor => ({\r\n            isDrag: monitor.isDragging()\r\n        })\r\n    });\r\n\r\n    drag(drop(ref));\r\n\r\n    return (\r\n        <div ref={ref as React.MutableRefObject<null>} className={classNames(styles.ingredient, 'mr-2')}>\r\n            <div>\r\n                <DragIcon type=\"primary\" />\r\n            </div>\r\n            <ConstructorElement\r\n                text={ingredient.name}\r\n                price={ingredient.price}\r\n                thumbnail={ingredient.image}\r\n                handleClose={() => onDeleteIngredient(ingredient)}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n","import React, { FC, useCallback, useEffect, useState } from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { RouteProps } from 'react-router';\r\nimport { useAppDispatch, useAppSelector } from '../../services/reducers/Root';\r\nimport { getUserData } from '../../services/actions/User';\r\n\r\nconst ProtectedRoute: FC<RouteProps & { children?: React.ReactNode }> = ({ children, ...rest }) => {\r\n    const user = useAppSelector(state => state.user);\r\n    const isAuth = !!user.data;\r\n    const dispatch = useAppDispatch();\r\n\r\n    const [isChecked, setIsChecked] = useState(false);\r\n\r\n    const init = useCallback(async () => {\r\n        await dispatch(getUserData());\r\n        setIsChecked(true);\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (!isAuth && !user.needAuth) {\r\n            init();\r\n        } else {\r\n            setIsChecked(true);\r\n        }\r\n    }, [init, isAuth, user.needAuth]);\r\n\r\n    if (isChecked) {\r\n        return (\r\n            <Route\r\n                {...rest}\r\n                render={({ location }) =>\r\n                    user.needAuth ? (\r\n                        <Redirect\r\n                            to={{\r\n                                pathname: '/login',\r\n                                state: { from: location }\r\n                            }}\r\n                        />\r\n                    ) : (\r\n                        children\r\n                    )\r\n                }\r\n            />\r\n        );\r\n    }\r\n    return <p>зАгрузка</p>;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { useState } from 'react';\r\nimport { useDrop } from 'react-dnd';\r\nimport classNames from 'classnames';\r\nimport { Button, ConstructorElement, CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nimport styles from './BurgerConstructor.module.css';\r\nimport { ADD_INGREDIENT } from '../../services/actions/Constructor';\r\nimport { sendOrderRequest } from '../../services/actions/Order';\r\nimport { getOrderIngredientsIDs } from '../../utils/getIngredientsGroups';\r\nimport { ConstructorIngredient } from './ConstructotIngredient/ConstructotIngredient';\r\nimport { APPEND_ERROR_MODAL_TYPE } from '../../services/actions/Modal';\r\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute';\r\nimport { OrderedIngredient } from '../../utils/types';\r\nimport { useAppDispatch, useAppSelector } from '../../services/reducers/Root';\r\n\r\nconst BurgerConstructor = () => {\r\n    const user = useAppSelector(state => state.user);\r\n    const { bun, ingredients, totalPrice } = useAppSelector(state => state.constructor);\r\n    const dispatch = useAppDispatch();\r\n    const [redirectToAuth, setRedirectToAuth] = useState(false);\r\n    const isAuth = !!user.data;\r\n    const hasBun = !!bun;\r\n    const hasIngredients = !!ingredients.length;\r\n    const canOrder = hasBun && hasIngredients;\r\n\r\n    const onSendOrderRequest = () => {\r\n        if (!isAuth) {\r\n            dispatch({\r\n                type: APPEND_ERROR_MODAL_TYPE,\r\n                message: 'Оформить заказ может только авторизированный пользователь'\r\n            });\r\n            setRedirectToAuth(true);\r\n        } else {\r\n            canOrder && dispatch(sendOrderRequest(getOrderIngredientsIDs([bun, ...ingredients])));\r\n        }\r\n    };\r\n\r\n    const onDropHandler = (ingredient: OrderedIngredient) => {\r\n        dispatch({ type: ADD_INGREDIENT, ingredient: ingredient });\r\n    };\r\n\r\n    const [, dropTarget] = useDrop({\r\n        accept: 'ingredient',\r\n        drop(ingredient: OrderedIngredient) {\r\n            onDropHandler(ingredient);\r\n        }\r\n    });\r\n\r\n    if (redirectToAuth) {\r\n        return <ProtectedRoute />;\r\n    }\r\n\r\n    return (\r\n        <section className={styles.wrapper} data-ft-id={'constructor'} ref={dropTarget}>\r\n            <section className={classNames(styles.ingredientsBlock, 'pt-25')}>\r\n                {!canOrder && (\r\n                    <p className=\"text text_type_main-small mb-10 mt-5 \">\r\n                        {`Пожалуйста, перенесите сюда \r\n                            ${!hasIngredients ? 'ингредиенты' : ''}\r\n                            ${!hasIngredients ? (!hasBun ? ' и' : '') : ''}\r\n                            ${!hasBun ? ' булку' : ''} для создания заказа`}\r\n                    </p>\r\n                )}\r\n                {!!totalPrice && (\r\n                    <>\r\n                        <div className={'mr-4'}>\r\n                            {hasBun && (\r\n                                <ConstructorElement\r\n                                    type={'top'}\r\n                                    isLocked={true}\r\n                                    text={`${bun.name} (верх)`}\r\n                                    price={bun.price}\r\n                                    thumbnail={bun.image}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                        <div className={styles.selectedBlock}>\r\n                            {!!ingredients.length &&\r\n                                ingredients\r\n                                    .sort((a: OrderedIngredient, b: OrderedIngredient) => a?.orderIndex - b?.orderIndex)\r\n                                    .map((ingredient: OrderedIngredient, index: number) => (\r\n                                        <ConstructorIngredient key={index} ingredient={ingredient} />\r\n                                    ))}\r\n                        </div>\r\n                        <div className={'mr-4'}>\r\n                            {hasBun && (\r\n                                <ConstructorElement\r\n                                    type={'bottom'}\r\n                                    isLocked={true}\r\n                                    text={`${bun.name} (низ)`}\r\n                                    price={bun.price}\r\n                                    thumbnail={bun.image}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </section>\r\n            <section className={classNames(styles.priceBlock, 'mt-10 mr-4 mb-10')}>\r\n                <div className={'mr-10'}>\r\n                    <span className=\"text text_type_digits-medium mr-2\">{totalPrice}</span>\r\n                    <CurrencyIcon type=\"primary\" />\r\n                </div>\r\n                <Button\r\n                    onClick={onSendOrderRequest}\r\n                    type={'primary'}\r\n                    disabled={!canOrder}\r\n                    size=\"large\"\r\n                    htmlType=\"button\"\r\n                >\r\n                    Оформить заказ\r\n                </Button>\r\n            </section>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default BurgerConstructor;\r\n","import React, { FC } from 'react';\r\nimport { DndProvider } from 'react-dnd';\r\nimport { HTML5Backend } from 'react-dnd-html5-backend';\r\n\r\nimport styles from './ConstructorPage.module.css';\r\n\r\nimport BurgerIngredients from '../../components/BurgerIngredients/BurgerIngredients';\r\nimport BurgerConstructor from '../../components/BurgerConstructor/BurgerConstructor';\r\n\r\nconst ConstructorPage: FC = () => {\r\n    return (\r\n        <main className={styles.content}>\r\n            <DndProvider backend={HTML5Backend}>\r\n                <>\r\n                    <BurgerIngredients />\r\n                    <BurgerConstructor />\r\n                </>\r\n            </DndProvider>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default ConstructorPage;\r\n","import React, { FC } from 'react';\r\nimport classnames from 'classnames';\r\nimport { Link, LinkProps } from 'react-router-dom';\r\n\r\nimport styles from './AdditionalLink.module.css';\r\n\r\ntype AdditionalLinkProps = {\r\n    className: string;\r\n    label: string;\r\n    lintText: string;\r\n};\r\n\r\nconst AdditionalLink: FC<AdditionalLinkProps & Pick<LinkProps, 'to' | 'replace'>> = ({\r\n    className,\r\n    label,\r\n    lintText,\r\n    to,\r\n    replace\r\n}) => {\r\n    return (\r\n        <section className={className}>\r\n            <span className={classnames(styles.linkLabel, 'text text_type_main-default mr-2')}>{label}</span>{' '}\r\n            <Link className={classnames(styles.link, 'text  text_type_main-default')} to={to} replace={replace}>\r\n                {lintText}\r\n            </Link>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default AdditionalLink;\r\n","import {ChangeEvent, useState} from 'react';\r\n\r\nexport function useForm(inputValues: any) {\r\n    const [values, setValues] = useState(inputValues);\r\n\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const { value, name } = e.target;\r\n        setValues({ ...values, [name]: value });\r\n    };\r\n    return { values, handleChange, setValues };\r\n}","import React, { FC } from 'react';\r\nimport styles from './SinglePageWrapper.module.css';\r\n\r\nconst SinglePageWrapper: FC = ({ children }) => <div className={styles.wrapper}>{children}</div>;\r\n\r\nexport default SinglePageWrapper;\r\n","import React, { FC } from 'react';\r\nimport { Redirect, useLocation } from 'react-router-dom';\r\nimport { Button, EmailInput, PasswordInput } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nimport AdditionalLink from '../../components/AdditionalLink/AdditionalLink';\r\nimport { loginUser } from '../../services/actions/User';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { LocationProps } from '../../utils/types';\r\nimport SinglePageWrapper from '../SinglePageWrapper';\r\nimport { useAppDispatch, useAppSelector } from '../../services/reducers/Root';\r\n\r\ninterface LoginFormData {\r\n    password: { value: string };\r\n    email: { value: string };\r\n}\r\n\r\nconst LoginPage: FC<{ isAuth: boolean }> = ({ isAuth }) => {\r\n    const dispatch = useAppDispatch();\r\n    const location = useLocation() as unknown as LocationProps;\r\n    const locationState = location.state;\r\n\r\n    const { values, handleChange, setValues } = useForm({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const enterHandler = async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        setValues({\r\n            ...values\r\n        });\r\n\r\n        const { password, email } = e.target as typeof e.target & LoginFormData;\r\n        await dispatch(loginUser(email.value, password.value));\r\n    };\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={locationState?.from || '/'} />;\r\n    } else {\r\n        return (\r\n            <SinglePageWrapper>\r\n                <p className=\"text text_type_main-medium\">Вход</p>\r\n                <form onSubmit={enterHandler}>\r\n                    <section className=\"mt-6\">\r\n                        <EmailInput onChange={handleChange} value={values.email} name={'email'} autoComplete=\"on\" />\r\n                    </section>\r\n                    <section className=\"mt-6\">\r\n                        <PasswordInput\r\n                            onChange={handleChange}\r\n                            value={values.password}\r\n                            name={'password'}\r\n                            autoComplete=\"on\"\r\n                        />\r\n                    </section>\r\n                    <section className=\"mt-6\">\r\n                        <Button type=\"primary\" size=\"large\" htmlType=\"submit\">\r\n                            Войти\r\n                        </Button>\r\n                    </section>\r\n                    <AdditionalLink\r\n                        className={'mt-20'}\r\n                        label=\"Вы — новый пользователь?\"\r\n                        to=\"/register\"\r\n                        lintText=\"Зарегистрироваться\"\r\n                        replace\r\n                    />\r\n                    <AdditionalLink\r\n                        className={'mt-4'}\r\n                        label=\"Забыли пароль?\"\r\n                        to=\"/forgot-password\"\r\n                        lintText=\"Восстановить пароль\"\r\n                        replace\r\n                    />\r\n                </form>\r\n            </SinglePageWrapper>\r\n        );\r\n    }\r\n};\r\n\r\nconst LoginPageContainer = () => {\r\n    const user = useAppSelector(state => state.user);\r\n    return user ? <LoginPage isAuth={!!user.data} /> : null;\r\n};\r\n\r\nexport default LoginPageContainer;\r\n","import React, { FC } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Button, EmailInput, Input, PasswordInput } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { registrationUser } from '../../services/actions/User';\r\nimport SinglePageWrapper from '../SinglePageWrapper';\r\nimport AdditionalLink from '../../components/AdditionalLink/AdditionalLink';\r\nimport { useAppDispatch, useAppSelector } from '../../services/reducers/Root';\r\n\r\ninterface RegistrationFormData {\r\n    email: { value: string };\r\n    password: { value: string };\r\n    name: { value: string };\r\n}\r\n\r\nconst RegistrationPage: FC<{ isAuth: boolean }> = ({ isAuth }) => {\r\n    const dispatch = useAppDispatch();\r\n    const { values, handleChange } = useForm({\r\n        name: '',\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const registrationHandler = (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        const { email, password, name } = e.target as typeof e.target & RegistrationFormData;\r\n        dispatch(registrationUser(email.value, password.value, name.value));\r\n    };\r\n\r\n    if (isAuth) {\r\n        return (\r\n            <Redirect\r\n                to={{\r\n                    pathname: '/'\r\n                }}\r\n            />\r\n        );\r\n    } else {\r\n        return (\r\n            <SinglePageWrapper>\r\n                <p className=\"text text_type_main-medium\">Регистрация</p>\r\n                <form onSubmit={registrationHandler}>\r\n                    <div className=\"mt-6\">\r\n                        <Input\r\n                            type={'text'}\r\n                            placeholder={'Имя'}\r\n                            onChange={handleChange}\r\n                            value={values.name}\r\n                            name={'name'}\r\n                            size={'default'}\r\n                            autoComplete=\"on\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"mt-6\">\r\n                        <EmailInput onChange={handleChange} value={values.email} name={'email'} autoComplete=\"on\" />\r\n                    </div>\r\n                    <div className=\"mt-6\">\r\n                        <PasswordInput\r\n                            onChange={handleChange}\r\n                            value={values.password}\r\n                            name={'password'}\r\n                            autoComplete=\"off\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"mt-6\">\r\n                        <Button type=\"primary\" size=\"large\" htmlType=\"submit\">\r\n                            Зарегистрироваться\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n                <AdditionalLink\r\n                    className={'mt-20'}\r\n                    label=\"Уже зарегистрированы?\"\r\n                    to=\"/login\"\r\n                    lintText=\"Войти\"\r\n                    replace\r\n                />\r\n            </SinglePageWrapper>\r\n        );\r\n    }\r\n};\r\n\r\nconst RegistrationPageContainer = () => {\r\n    const user = useAppSelector(state => state.user);\r\n    return user ? <RegistrationPage isAuth={!!user.data} /> : null;\r\n};\r\n\r\nexport default RegistrationPageContainer;\r\n","import React, { FC, FormEvent } from 'react';\r\nimport { Button, EmailInput, Input, PasswordInput } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nimport SinglePageWrapper from '../SinglePageWrapper';\r\nimport AdditionalLink from '../../components/AdditionalLink/AdditionalLink';\r\nimport { passwordReset, passwordResetConfirmation } from '../../utils/api';\r\nimport { Redirect, useHistory, useLocation } from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { EnumResetPassportStepType, LocationProps } from '../../utils/types';\r\nimport { useAppSelector } from '../../services/reducers/Root';\r\n\r\ninterface EmailConformationFormData {\r\n    email: { value: string };\r\n}\r\n\r\ninterface PasswordConformationFormData {\r\n    password: { value: string };\r\n    token: { value: string };\r\n}\r\n\r\nconst getStepContent = (step: EnumResetPassportStepType) => {\r\n    switch (step) {\r\n        case EnumResetPassportStepType.EMAIL:\r\n            return <EmailConformation />;\r\n        case EnumResetPassportStepType.PASSWORD:\r\n            return <PasswordConformation />;\r\n        default:\r\n            return <EmailConformation />;\r\n    }\r\n};\r\n\r\nconst PasswordConformation = () => {\r\n    const history = useHistory();\r\n    const location = useLocation() as unknown as LocationProps;\r\n    const isEmailConfirm = !!location.state?.isEmailConfirm;\r\n\r\n    const { values, handleChange } = useForm({\r\n        token: '',\r\n        password: ''\r\n    });\r\n\r\n    const passwordConformationHandler = (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        const { password, token } = e.target as typeof e.target & PasswordConformationFormData;\r\n        passwordResetConfirmation(password.value, token.value).then(() => history.replace({ pathname: '/' }));\r\n    };\r\n\r\n    if (isEmailConfirm) {\r\n        return (\r\n            <form onSubmit={passwordConformationHandler}>\r\n                <div className=\"mt-6\">\r\n                    <PasswordInput\r\n                        onChange={handleChange}\r\n                        value={values.password}\r\n                        name={'password'}\r\n                        autoComplete={'off'}\r\n                    />\r\n                </div>\r\n                <div className=\"mt-6\">\r\n                    <Input\r\n                        type={'text'}\r\n                        placeholder={'Введите код из письма'}\r\n                        onChange={handleChange}\r\n                        value={values.token}\r\n                        name={'token'}\r\n                        error={false}\r\n                        errorText={'Ошибка'}\r\n                        size={'default'}\r\n                        autoComplete={'off'}\r\n                    />\r\n                </div>\r\n                <div className=\"mt-6\">\r\n                    <Button type=\"primary\" size=\"large\" htmlType=\"submit\">\r\n                        Сохранить\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Redirect\r\n            to={{\r\n                pathname: '/forgot-password'\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nconst EmailConformation = () => {\r\n    const history = useHistory();\r\n    const { values, handleChange } = useForm({\r\n        email: ''\r\n    });\r\n\r\n    const emailConformationHandler = (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        const { email } = e.target as typeof e.target & EmailConformationFormData;\r\n        passwordReset(email.value).then(() =>\r\n            history.replace({ pathname: '/reset-password' }, { isEmailConfirm: true })\r\n        );\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={emailConformationHandler}>\r\n            <section className=\"mt-6\">\r\n                <EmailInput onChange={handleChange} value={values.email} name={'email'} />\r\n            </section>\r\n            <section className=\"mt-6\">\r\n                <Button type=\"primary\" size=\"large\" htmlType=\"submit\">\r\n                    Восстановить\r\n                </Button>\r\n            </section>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst ResetPasswordPage: FC<{ step: EnumResetPassportStepType; isAuth: boolean }> = ({ step, isAuth }) => {\r\n    if (isAuth) {\r\n        return (\r\n            <Redirect\r\n                to={{\r\n                    pathname: '/'\r\n                }}\r\n            />\r\n        );\r\n    } else {\r\n        return (\r\n            <SinglePageWrapper>\r\n                <p className=\"text text_type_main-medium\">Восстановление пароля</p>\r\n                {getStepContent(step)}\r\n                <AdditionalLink className={'mt-20'} label=\"Вспомнили пароль?\" to=\"/login\" lintText=\"Войти\" replace />\r\n            </SinglePageWrapper>\r\n        );\r\n    }\r\n};\r\n\r\nconst ResetPasswordPageContainer: FC<{ step: EnumResetPassportStepType }> = ({ step }) => {\r\n    const user = useAppSelector(state => state.user);\r\n    return user ? <ResetPasswordPage isAuth={!!user.data} step={step} /> : null;\r\n};\r\n\r\nexport default ResetPasswordPageContainer;\r\n","import React, { ChangeEvent, FC, useEffect, useState } from 'react';\r\nimport classNames from 'classnames';\r\nimport styles from '../ProfilePage.module.css';\r\nimport { Button, Input } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { useForm } from '../../../hooks/useForm';\r\nimport { useAppDispatch, useAppSelector } from '../../../services/reducers/Root';\r\nimport { patchUserData } from '../../../services/actions/User';\r\nimport { TUserInfoData } from '../../../utils/types';\r\n\r\ntype ProfileInputProps = {\r\n    placeholder: string;\r\n    value: string;\r\n    type: 'text' | 'email' | 'password' | undefined;\r\n    onChange: (e: ChangeEvent<HTMLInputElement>) => void;\r\n    name: string;\r\n};\r\n\r\nconst ProfileInput: FC<ProfileInputProps> = ({ placeholder, onChange, value, type, name }) => {\r\n    return (\r\n        <div className={classNames(styles.section, 'mt-6')}>\r\n            <Input\r\n                type={type}\r\n                placeholder={placeholder}\r\n                onChange={onChange}\r\n                value={value ?? ''}\r\n                name={name}\r\n                size={'default'}\r\n                icon={'EditIcon'}\r\n                autoComplete={'off'}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Profile: FC<{ data: TUserInfoData }> = ({ data }) => {\r\n    const dispatch = useAppDispatch();\r\n    const { values, handleChange, setValues } = useForm({\r\n        email: data.email,\r\n        name: data.name,\r\n        password: ''\r\n    });\r\n    const [isModify, setIsModify] = useState(false);\r\n\r\n    const abortChangeHandler = () => {\r\n        setValues({\r\n            email: data.email,\r\n            name: data.name,\r\n            password: ''\r\n        });\r\n    };\r\n\r\n    const changeUserHandler = () => {\r\n        dispatch(patchUserData(values.email, values.password, values.name));\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!values.password && JSON.stringify(values) === JSON.stringify({ ...data, password: '' })) {\r\n            setIsModify(false);\r\n        } else {\r\n            setIsModify(true);\r\n        }\r\n    }, [data, values]);\r\n\r\n    return (\r\n        <>\r\n            <form className=\"mt-25\">\r\n                <ProfileInput\r\n                    type={'text'}\r\n                    placeholder={'Имя'}\r\n                    onChange={handleChange}\r\n                    value={values.name}\r\n                    name={'name'}\r\n                />\r\n                <ProfileInput\r\n                    type={'text'}\r\n                    placeholder={'Логин'}\r\n                    onChange={handleChange}\r\n                    value={values.email}\r\n                    name={'email'}\r\n                />\r\n                <ProfileInput\r\n                    type={'password'}\r\n                    placeholder={'Пароль'}\r\n                    onChange={handleChange}\r\n                    value={values.password}\r\n                    name={'password'}\r\n                />\r\n                <div className={classNames(styles.section, 'mt-10')}>\r\n                    <Button type=\"secondary\" size=\"medium\" htmlType=\"reset\" onClick={abortChangeHandler}>\r\n                        Отмена\r\n                    </Button>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        size=\"medium\"\r\n                        htmlType=\"submit\"\r\n                        disabled={!isModify}\r\n                        onClick={changeUserHandler}\r\n                    >\r\n                        Сохранить\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nconst ProfileWrapper:FC = () => {\r\n    const { data, userRequest } = useAppSelector(state => state.user);\r\n\r\n    if (!userRequest && data) {\r\n        return <Profile data={data} />;\r\n    }\r\n\r\n    return <p>Загрузка...</p>\r\n};\r\n\r\nexport default ProfileWrapper;\r\n","import React, { FC } from 'react';\r\nimport '@ya.praktikum/react-developer-burger-ui-components';\r\nimport styles from './OrderListItem.module.css';\r\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { useHistory, useLocation, useRouteMatch } from 'react-router-dom';\r\nimport { EnumOrderStatusName, IngredientType, LocationProps, OrderType } from '../../utils/types';\r\nimport classNames from 'classnames';\r\nimport { calculateOrderCost, dateParse, getOrderIngredients } from '../../utils/helpers';\r\n\r\nconst OrderListItem: FC<{ orderData: OrderType; orderIngredients: IngredientType[] }> = ({\r\n    orderData,\r\n    orderIngredients\r\n}) => {\r\n    const history = useHistory();\r\n    const location = useLocation() as unknown as LocationProps;\r\n    const { path } = useRouteMatch();\r\n\r\n    const ingredientList = getOrderIngredients(orderIngredients);\r\n\r\n    const OpenOrderItemHandler = () => {\r\n        history.push(`${path}/${orderData._id}`, { background: location });\r\n    };\r\n\r\n    return (\r\n        <section className={classNames(styles.item, 'pt-6 pr-6 pb-6 pl-6 mb-4')} onClick={OpenOrderItemHandler}>\r\n            <div className={classNames(styles.top, 'mb-6')}>\r\n                <p className=\"text text_type_digits-default\">#{orderData.number}</p>\r\n                <p className=\"text text_type_main-default text_color_inactive\">{dateParse(orderData.createdAt)}</p>\r\n            </div>\r\n            <p className=\"text text_type_main-medium mb-2\">{orderData.name}</p>\r\n            <p className=\"text text_type_main-default mb-6\">{EnumOrderStatusName[orderData.status]}</p>\r\n            <div className={styles.bottom}>\r\n                <div className={styles.params}>\r\n                    {orderData.ingredients\r\n                        .map((orderIngredient, i) => (\r\n                            ingredientList[orderIngredient] &&\r\n                            <React.Fragment key={i}>\r\n                                {i < 5 ? (\r\n                                    <div className={styles.param}>\r\n                                        <img\r\n                                            className={styles.paramImg}\r\n                                            src={ingredientList[orderIngredient].image_mobile}\r\n                                            alt={`Добавка: ${ingredientList[orderIngredient].name}`}\r\n                                        />\r\n                                    </div>\r\n                                ) : i === 5 ? (\r\n                                    <div\r\n                                        className={classNames(\r\n                                            styles.param,\r\n                                            'text text_type_main-default text_color_inactive'\r\n                                        )}\r\n                                        key={i}\r\n                                    >\r\n                                        {orderData.ingredients.length > 6 ? (\r\n                                            <>\r\n                                                <img\r\n                                                    className={classNames(styles.paramImg, styles.lastParamImg)}\r\n                                                    src={ingredientList[orderIngredient].image_mobile}\r\n                                                    alt={`Добавка: ${ingredientList[orderIngredient].name}`}\r\n                                                />\r\n                                                <span\r\n                                                    className={classNames(\r\n                                                        styles.paramAdditionalValue,\r\n                                                        'text text_type_main-default'\r\n                                                    )}\r\n                                                >\r\n                                                    +{orderData.ingredients.length - 6}\r\n                                                </span>\r\n                                            </>\r\n                                        ) : (\r\n                                            <img\r\n                                                className={styles.paramImg}\r\n                                                src={ingredientList[orderIngredient].image_mobile}\r\n                                                alt={`Добавка: ${ingredientList[orderIngredient].name}`}\r\n                                            />\r\n                                        )}\r\n                                    </div>\r\n                                ) : null}\r\n                            </React.Fragment>\r\n                        ))\r\n                        .reverse()}\r\n                </div>\r\n                <div className={styles.price}>\r\n                    <p className=\"text text_type_digits-default mr-2\">\r\n                        {calculateOrderCost(orderData.ingredients.map(ingredient => ingredientList[ingredient]))}\r\n                    </p>\r\n                    <CurrencyIcon type=\"primary\" />\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default OrderListItem;\r\n","import React, { FC } from 'react';\r\nimport '@ya.praktikum/react-developer-burger-ui-components';\r\nimport styles from './Feed.module.css';\r\nimport classNames from 'classnames';\r\nimport OrderListItem from '../OrderListItem/OrderListItem';\r\nimport { IngredientType, OrderType } from '../../utils/types';\r\nimport { diffDates } from '../../utils/helpers';\r\n\r\nconst OrderTable: FC<{ orderData: OrderType[] }> = ({ orderData }) => {\r\n    const doneOrders = orderData.filter(order => order.status === 'done');\r\n    const pendingOrders = orderData.filter(order => order.status === 'pending');\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.numbers}>\r\n                <div className={styles.numbers_block}>\r\n                    <p className=\"text text_type_main-medium mb-6\">Готовы</p>\r\n                    <div className={styles.numbers_blue}>\r\n                        {doneOrders.map((order, i) => {\r\n                            return i < 10 ? (\r\n                                <p key={order._id} className=\"text text_type_digits-default mb-2\">\r\n                                    #{order.number}\r\n                                </p>\r\n                            ) : null;\r\n                        })}\r\n                    </div>\r\n                </div>\r\n                {!!pendingOrders.length && (\r\n                    <div className={styles.numbers_block}>\r\n                        <p className=\"text text_type_main-medium mb-6\">В работе</p>\r\n                        <div>\r\n                            {pendingOrders.map(order => {\r\n                                return (\r\n                                    <p key={order._id} className=\"text text_type_digits-default mb-2\">\r\n                                        #{order.number}\r\n                                    </p>\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <div className={'mt-15'}>\r\n                <p className=\"text text_type_main-medium\">Выполнено за все время:</p>\r\n                <p className={styles.result_text + ' text text_type_digits-large'}>{orderData.sort()[0]?.number}</p>\r\n            </div>\r\n            <div className={'mt-15'}>\r\n                <p className=\"text text_type_main-medium\">Выполнено за сегодня:</p>\r\n                <p className={styles.result_text + ' text text_type_digits-large'}>\r\n                    {orderData.filter(order => diffDates(new Date(order.createdAt)) < 1).length}\r\n                </p>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst getOrderIngredients = (ingredients: IngredientType[], ingredientsID: string[]) => {\r\n    return ingredients.filter(ingredient => ingredientsID.includes(ingredient._id));\r\n};\r\n\r\nexport const OrderList: FC<{ orderData: OrderType[]; ingredients: IngredientType[] }> = ({\r\n    orderData,\r\n    ingredients\r\n}) => {\r\n    if (!orderData.length) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {orderData.map((orderItemData, i) => (\r\n                <OrderListItem\r\n                    key={`${orderItemData._id}${i}`}\r\n                    orderData={orderItemData}\r\n                    orderIngredients={getOrderIngredients(ingredients, orderItemData.ingredients)}\r\n                />\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nconst Feed: FC<{ orderData: OrderType[]; ingredients: IngredientType[] }> = ({ orderData, ingredients }) => {\r\n    return (\r\n        <div className={classNames(styles.container, 'pl-4 pr-4 mt-10')}>\r\n            <p className=\"text text_type_main-large mt-10 mb-5\">Лента заказов</p>\r\n            <div className={styles.wrapper}>\r\n                <div className={classNames(styles.orderList, 'pr-2')}>\r\n                    <OrderList orderData={orderData} ingredients={ingredients} />\r\n                </div>\r\n                <div className={styles.orderTable}>\r\n                    <OrderTable orderData={orderData} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Feed;\r\n","import { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\n\r\nimport styles from './OrderItem.module.css';\r\nimport classNames from 'classnames';\r\nimport React, { FC } from 'react';\r\nimport { useAppSelector } from '../../../services/reducers/Root';\r\nimport { EnumOrderStatusName, IIngredientList, OrderType } from '../../../utils/types';\r\nimport { calculateOrderCost, dateParse, getOrderIngredients } from '../../../utils/helpers';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst OrderItem: FC<{ orderItem: OrderType; ingredientList: IIngredientList; isModal: boolean }> = ({\r\n    orderItem,\r\n    ingredientList,\r\n    isModal\r\n}) => {\r\n    const orderIngredientsSet = new Set(orderItem.ingredients);\r\n\r\n    return (\r\n        <div className={classNames(styles.wrapper, 'mb-10', { 'mt-10 ': !isModal })}>\r\n            <p className=\"text text_type_digits-default mb-10\">#{orderItem.number}</p>\r\n            <p className=\"text text_type_main-medium mb-3\">{orderItem.name}</p>\r\n            <p className=\"text text_type_main-default mb-15\">{EnumOrderStatusName[orderItem.status]}</p>\r\n            <p className=\"text text_type_main-medium mb-6\">Состав:</p>\r\n            <div className={classNames(styles.ingredients, 'pr-6 mb-10')}>\r\n                {[...orderIngredientsSet].map((ingredientID, i) => {\r\n                    return (\r\n                        <div key={i} className={classNames(styles.ingredient, 'mb-4')}>\r\n                            <div className={styles.title}>\r\n                                <div className={classNames(styles.icon, 'mr-4')}>\r\n                                    <img\r\n                                        className={styles.iconImg}\r\n                                        src={ingredientList[ingredientID].image_mobile}\r\n                                        alt={`Добавка: ${ingredientList[ingredientID].name}`}\r\n                                    />\r\n                                </div>\r\n                                <p className=\"text text_type_main-default\">{ingredientList[ingredientID].name}</p>\r\n                            </div>\r\n                            <div className={styles.price}>\r\n                                <p className=\"text text_type_digits-default mr-2\">\r\n                                    {orderItem.ingredients.filter(ingredient => ingredient === ingredientID).length} x{' '}\r\n                                    {ingredientList[ingredientID].price}\r\n                                </p>{' '}\r\n                                <CurrencyIcon type=\"primary\" />\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n            <div className={styles.bottom}>\r\n                <p className=\"text text_type_main-default text_color_inactive\">{dateParse(orderItem.createdAt)}</p>\r\n                <div className={styles.price}>\r\n                    <p className=\"text text_type_digits-default mr-2\">\r\n                        {calculateOrderCost(orderItem.ingredients.map(ingredient => ingredientList[ingredient]))}\r\n                    </p>{' '}\r\n                    <CurrencyIcon type=\"primary\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst OrderItemContainer: FC<{ isModal?: boolean }> = ({ isModal }) => {\r\n    const { orderData, ingredients } = useAppSelector(state => ({\r\n        orderData: state.orderList.data,\r\n        ingredients: state.ingredients.ingredients\r\n    }));\r\n\r\n    const urlParams = useParams<{ id: string }>();\r\n    const selectedOrderId = urlParams.id;\r\n\r\n    if (!orderData.length || !ingredients.length) {\r\n        return null;\r\n    }\r\n\r\n    const ingredientList = getOrderIngredients(ingredients);\r\n    const selectedOrderData = orderData.find(order => order._id === selectedOrderId) as OrderType;\r\n\r\n    return <OrderItem orderItem={selectedOrderData} ingredientList={ingredientList} isModal={!!isModal} />;\r\n};\r\n\r\nexport default OrderItemContainer;\r\n","import React, { FC, useEffect } from 'react';\r\nimport { OrderList } from '../../../components/Feed';\r\nimport styles from './Ordres.module.css';\r\nimport classNames from 'classnames';\r\nimport { useAppDispatch, useAppSelector } from '../../../services/reducers/Root';\r\nimport { WS_CONNECTION_CLOSED, WS_CONNECTION_START } from '../../../services/actions/WebSocket';\r\nimport { IngredientType, OrderType } from '../../../utils/types';\r\nimport { WSS_USER_ORDERS_URL } from '../../../utils/constants';\r\nimport OrderItem from '../../../components/OrderListItem/OrderItem/OrderItem';\r\nimport {getClearAccessToken} from \"../../../utils/helpers\";\r\n\r\nconst Orders: FC<{ orderData: OrderType[]; ingredients: IngredientType[] }> = ({ orderData, ingredients }) => {\r\n    return (\r\n        <section className={classNames(styles.orderList, 'mt-15')}>\r\n            <OrderList orderData={orderData} ingredients={ingredients} />\r\n        </section>\r\n    );\r\n};\r\n\r\nconst OrdersContainer: FC<{ isSinglePage?: boolean }> = ({ isSinglePage }) => {\r\n    const dispatch = useAppDispatch();\r\n    const { orderData, ingredients, stateAccessToken } = useAppSelector(state => ({\r\n        orderData: state.orderList.data?.reverse(),\r\n        ingredients: state.ingredients.ingredients,\r\n        stateAccessToken: state.user?.accessToken?.split('Bearer ')[1]\r\n    }));\r\n\r\n    let accessToken: string|undefined = '';\r\n\r\n    accessToken = getClearAccessToken();\r\n\r\n    if (!accessToken) {\r\n        accessToken = stateAccessToken\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: WS_CONNECTION_START,\r\n            payload: { url: `${WSS_USER_ORDERS_URL}${accessToken}` }\r\n        });\r\n\r\n        return () => {\r\n            dispatch({\r\n                type: WS_CONNECTION_CLOSED\r\n            });\r\n        };\r\n    }, [accessToken, dispatch]);\r\n\r\n    if (!!orderData?.length && !!ingredients?.length) {\r\n        return isSinglePage ? <OrderItem /> : <Orders orderData={orderData} ingredients={ingredients} />;\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\nexport default OrdersContainer;\r\n","import React, { FC, useCallback } from 'react';\r\nimport { Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { logoutUser } from '../../../services/actions/User';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useAppDispatch } from '../../../services/reducers/Root';\r\n\r\nconst Logout: FC = () => {\r\n    const dispatch = useAppDispatch();\r\n    const history = useHistory();\r\n\r\n    const onLogout = useCallback(() => {\r\n        history.replace({ pathname: '/' });\r\n    }, [history]);\r\n\r\n    const logoutHandler = async (e: React.SyntheticEvent<Element, Event>) => {\r\n        e.preventDefault();\r\n        await dispatch(logoutUser());\r\n        await onLogout();\r\n    };\r\n\r\n    return (\r\n        <section className=\"mt-25\">\r\n            <Button type=\"primary\" size=\"large\" htmlType=\"button\" onClick={logoutHandler}>\r\n                Выйти\r\n            </Button>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Logout;\r\n","import React, { FC } from 'react';\r\nimport { NavLink, Route, Switch } from 'react-router-dom';\r\nimport classNames from 'classnames';\r\n\r\nimport styles from './ProfilePage.module.css';\r\nimport Profile from './Profile/Profile';\r\nimport Orders from './Orders/Orders';\r\nimport Logout from './Logout/Logout';\r\nimport { NavItemProps } from '../../utils/types';\r\n\r\nconst ProfileNavLink: FC<NavItemProps> = ({ to, text }) => {\r\n    return (\r\n        <NavLink to={to} className={styles.label} activeClassName={styles.activeLabel} exact>\r\n            <div className={styles.labelWrapper}>\r\n                <p className=\"text text_type_main-medium\">{text}</p>\r\n            </div>\r\n        </NavLink>\r\n    );\r\n};\r\n\r\nconst ProfilePage: FC = ({ children }) => {\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className=\"mr-15 mt-25\">\r\n                <ProfileNavLink to={'/profile'} text={'Профиль'} />\r\n                <ProfileNavLink to={'/profile/orders'} text={'История заказов'} />\r\n                <ProfileNavLink to={'/profile/logout'} text={'Выход'} />\r\n                <div className={classNames(styles.navHint, 'mt-20')}>\r\n                    <p className=\"text text_type_main-default\">\r\n                        В&nbsp;этом разделе вы&nbsp;можете изменить&nbsp;свои персональные данные\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div className={styles.content}>{children}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ProfilePageContainer = () => {\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <Switch>\r\n                <Route path=\"/profile/orders/:id\" exact>\r\n                    <Orders isSinglePage />\r\n                </Route>\r\n                <ProfilePage>\r\n                    <Route path=\"/profile/orders\" exact>\r\n                        <Orders />\r\n                    </Route>\r\n                    <Route path=\"/profile\" exact>\r\n                        <Profile />\r\n                    </Route>\r\n                    <Route path=\"/profile/logout\" exact>\r\n                        <Logout />\r\n                    </Route>\r\n                </ProfilePage>\r\n            </Switch>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfilePageContainer;\r\n","import React, { FC, useEffect, useState } from 'react';\r\nimport classNames from 'classnames';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport styles from './IngredientDetails.module.css';\r\nimport { IngredientType } from '../../utils/types';\r\nimport { useAppSelector } from '../../services/reducers/Root';\r\n\r\ntype IngredientDetailsProps = {\r\n    ingredient: IngredientType;\r\n};\r\n\r\nconst IngredientDetailsContent: FC<IngredientDetailsProps & { isLoading: boolean }> = ({ ingredient, isLoading }) => {\r\n    const getProperty = (propertyName: string) => {\r\n        return isLoading ? '...' : ingredient[propertyName as keyof IngredientType];\r\n    };\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            {isLoading ? (\r\n                <div className={styles.loaderContainer}>\r\n                    <span className={styles.loader}></span>\r\n                </div>\r\n            ) : (\r\n                <img src={ingredient.image_large} alt={ingredient.name} />\r\n            )}\r\n            <p className={'text text_type_main-medium pt-3 pb-3'}>{!isLoading && ingredient.name}</p>\r\n            <div className={classNames('pt-5 pb-15', styles.propertyList)}>\r\n                <div className={styles.propertyItem}>\r\n                    <p className={'text text_type_main-default text_color_inactive mb-2'}>Калории,ккал</p>\r\n                    <p className={'text text_type_digits-default text_color_inactive'}>{getProperty('calories')}</p>\r\n                </div>\r\n                <div className={styles.propertyItem}>\r\n                    <p className={'text text_type_main-default text_color_inactive mb-2'}>Белки, г</p>\r\n                    <p className={'text text_type_digits-default text_color_inactive'}>{getProperty('proteins')}</p>\r\n                </div>\r\n                <div className={styles.propertyItem}>\r\n                    <p className={'text text_type_main-default text_color_inactive mb-2'}>Жиры, г</p>\r\n                    <p className={'text text_type_digits-default text_color_inactive'}>{getProperty('fat')}</p>\r\n                </div>\r\n                <div className={styles.propertyItem}>\r\n                    <p className={'text text_type_main-default text_color_inactive mb-2'}>Углеводы, г</p>\r\n                    <p className={'text text_type_digits-default text_color_inactive'}>\r\n                        {getProperty('carbohydrates')}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst IngredientDetails: FC<IngredientDetailsProps> = ({ ingredient }) => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    useEffect(() => setIsLoading(ingredient === null), [ingredient]);\r\n\r\n    return <IngredientDetailsContent ingredient={ingredient} isLoading={isLoading} />;\r\n};\r\n\r\nconst IngredientDetailsContainer = () => {\r\n    const { ingredientId }: { ingredientId: string } = useParams();\r\n    const { ingredientDetails, ingredientList } = useAppSelector(state => ({\r\n        ingredientDetails: state.ingredientDetails,\r\n        ingredientList: state.ingredients\r\n    }));\r\n\r\n    const getIngredient = () => {\r\n        if (ingredientDetails) {\r\n            return ingredientDetails;\r\n        }\r\n\r\n        return ingredientList.ingredients.filter((item: IngredientType) => item._id === ingredientId)[0];\r\n    };\r\n\r\n    return <IngredientDetails ingredient={getIngredient()} />;\r\n};\r\n\r\nexport default IngredientDetailsContainer;\r\n","export default __webpack_public_path__ + \"static/media/done.3ba9e5cd.svg\";","import React, { FC } from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport styles from './OrderDetails.module.css';\r\nimport doneIcon from './icon/done.svg';\r\nimport Modal from '../../Modal/Modal';\r\nimport { REMOVE_MODAL_TYPE } from '../../../services/actions/Modal';\r\nimport { useAppDispatch, useAppSelector } from '../../../services/reducers/Root';\r\n\r\nconst OrderDetails: FC = () => {\r\n    const dispatch = useAppDispatch();\r\n    const { orderRequest, orderData } = useAppSelector(state => state.order);\r\n\r\n    const closeModal = () => {\r\n        dispatch({ type: REMOVE_MODAL_TYPE });\r\n    };\r\n\r\n    return (\r\n        <Modal onClose={closeModal}>\r\n            <div className={styles.wrapper}>\r\n                <span className={classNames('text text_type_digits-large mt-3 mb-3', styles.orderNumber)}>\r\n                    {!orderRequest ? orderData.number : 'Loading...'}\r\n                </span>\r\n                <p className={'text text_type_main-medium mb-15'}>идентификатор заказа</p>\r\n                <img src={doneIcon} alt=\"Принято\" />\r\n                <p className={'text text_type_main-default pt-15 pb-2'}>Ваш заказ начали готовить</p>\r\n                <p className={'text text_type_main-default text_color_inactive pb-30'}>\r\n                    Дождитесь готовности на орбитальной станции\r\n                </p>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default OrderDetails\r\n","import React, { FC } from 'react';\r\nimport classNames from 'classnames';\r\n\r\nimport Modal from '../Modal';\r\nimport styles from './ErrorModal.module.css';\r\nimport { REMOVE_MODAL_TYPE } from '../../../services/actions/Modal';\r\nimport { useAppDispatch, useAppSelector } from '../../../services/reducers/Root';\r\n\r\nconst ErrorModal: FC = () => {\r\n    const dispatch = useAppDispatch();\r\n    const { status, message } = useAppSelector(state => state.modal);\r\n\r\n    const closeModal = () => {\r\n        dispatch({ type: REMOVE_MODAL_TYPE });\r\n    };\r\n\r\n    return (\r\n        <Modal onClose={closeModal} title={'Ошибка'}>\r\n            <div className={classNames(styles.wrapper, 'pb-10')}>\r\n                {status && <span className={classNames('text text_type_main-medium mt-3 mb-3')}>Статус:{status}</span>}\r\n                {message && (\r\n                    <span className={classNames('text text_type_main-medium mt-3 mb-3')}>Сообщение:{message}</span>\r\n                )}\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default ErrorModal;\r\n","import React, { FC, useEffect } from 'react';\r\n\r\nimport Feed from '../../components/Feed/Feed';\r\nimport { WS_CONNECTION_CLOSED, WS_CONNECTION_START } from '../../services/actions/WebSocket';\r\nimport { useAppDispatch, useAppSelector } from '../../services/reducers/Root';\r\nimport { WSS_ALL_ORDERS_URL } from '../../utils/constants';\r\nimport OrderItem from '../../components/OrderListItem/OrderItem/OrderItem';\r\n\r\nconst FeedPage: FC<{ isSinglePage?: boolean }> = ({ isSinglePage }) => {\r\n    const dispatch = useAppDispatch();\r\n    const { orderData, ingredients } = useAppSelector(state => ({\r\n        orderData: state.orderList.data,\r\n        ingredients: state.ingredients.ingredients\r\n    }));\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: WS_CONNECTION_START,\r\n            payload: { url: WSS_ALL_ORDERS_URL }\r\n        });\r\n\r\n        return () => {\r\n            dispatch({\r\n                type: WS_CONNECTION_CLOSED\r\n            });\r\n        };\r\n    }, [dispatch]);\r\n\r\n    if (!!orderData.length && !!ingredients.length) {\r\n        return isSinglePage ? <OrderItem /> : <Feed orderData={orderData} ingredients={ingredients} />;\r\n    }\r\n\r\n    return null;\r\n};\r\n\r\nexport default FeedPage;","import React, { useCallback, useEffect } from 'react';\r\nimport { Route, Switch, useHistory, useLocation } from 'react-router-dom';\r\n\r\nimport { AppHeader } from '../AppHeader';\r\nimport { getUserData } from '../../services/actions/User';\r\nimport { getIngredientsData } from '../../services/actions/Ingredients';\r\nimport { EnumModalType, EnumResetPassportStepType, ILocation } from '../../utils/types';\r\nimport { useAppDispatch, useAppSelector } from '../../services/reducers/Root';\r\n\r\nimport Modal from '../Modal/Modal';\r\nimport ConstructorPage from '../../pages/ConstructorPage/ConstructorPage';\r\nimport LoginPage from '../../pages/LoginPage/LoginPage';\r\nimport RegistrationPage from '../../pages/RegistrationPage/RegistrationPage';\r\nimport ResetPasswordPage from '../../pages/ResetPasswordPage/ResetPasswordPage';\r\nimport ProfilePage from '../../pages/ProfilePage/ProfilePage';\r\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute';\r\nimport IngredientDetails from '../IngredientDetails/IngredientDetails';\r\nimport OrderDetails from '../BurgerConstructor/OrderDetails/OrderDetails';\r\nimport ErrorModal from '../Modal/ErrorModal/ErrorModal';\r\nimport FeedPage from '../../pages/FeedPage/FeedPage';\r\nimport OrderItem from '../OrderListItem/OrderItem/OrderItem';\r\n\r\nconst getModal = (modalType: EnumModalType) => {\r\n    switch (modalType) {\r\n        case EnumModalType.ORDER:\r\n            return <OrderDetails />;\r\n        case EnumModalType.ERROR:\r\n            return <ErrorModal />;\r\n        default:\r\n            return null;\r\n    }\r\n};\r\n\r\nfunction App() {\r\n    const dispatch = useAppDispatch();\r\n    const location = useLocation<ILocation>();\r\n    const history = useHistory();\r\n\r\n    const { modalType, ingredientList } = useAppSelector(state => ({\r\n        modalType: state.modal.modalType,\r\n        ingredientList: state.ingredients\r\n    }));\r\n\r\n    const background = location.state && location.state.background;\r\n    const handleModalClose = () => {\r\n        history.goBack();\r\n    };\r\n\r\n    const init = useCallback(async () => {\r\n        await dispatch(getUserData());\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        init();\r\n    }, [init]);\r\n\r\n    useEffect(() => {\r\n        dispatch(getIngredientsData());\r\n    }, [dispatch]);\r\n\r\n    if (ingredientList.ingredientsRequest) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <AppHeader />\r\n            <Switch location={background || location}>\r\n                <Route path=\"/login\" exact>\r\n                    <LoginPage />\r\n                </Route>\r\n                <Route path=\"/register\" exact>\r\n                    <RegistrationPage />\r\n                </Route>\r\n                <Route path=\"/forgot-password\" exact>\r\n                    <ResetPasswordPage step={EnumResetPassportStepType.EMAIL} />\r\n                </Route>\r\n                <Route path=\"/reset-password\" exact>\r\n                    <ResetPasswordPage step={EnumResetPassportStepType.PASSWORD} />\r\n                </Route>\r\n                <ProtectedRoute path=\"/profile\">\r\n                    <ProfilePage />\r\n                </ProtectedRoute>\r\n                <Route path=\"/feed\" exact>\r\n                    <FeedPage />\r\n                </Route>\r\n                <Route path=\"/feed/:id\" exact>\r\n                    <FeedPage isSinglePage />\r\n                </Route>\r\n                <Route path=\"/ingredients/:ingredientId\" exact>\r\n                    <IngredientDetails />\r\n                </Route>\r\n                <Route path=\"/\" exact>\r\n                    <ConstructorPage />\r\n                </Route>\r\n                {/*<Route>*/}\r\n                {/*    <NotFound404 />*/}\r\n                {/*</Route>*/}\r\n            </Switch>\r\n\r\n            {background?.pathname === '/' && (\r\n                <Route\r\n                    path=\"/ingredients/:ingredientId\"\r\n                    children={\r\n                        <Modal title={'Детали ингредиента'} onClose={handleModalClose}>\r\n                            <IngredientDetails />\r\n                        </Modal>\r\n                    }\r\n                />\r\n            )}\r\n\r\n            {['/feed', '/profile/orders'].includes(background?.pathname) && (\r\n                <Route\r\n                    path={`${background.pathname}/:id`}\r\n                    children={\r\n                        <Modal title={''} onClose={handleModalClose}>\r\n                            <OrderItem isModal />\r\n                        </Modal>\r\n                    }\r\n                />\r\n            )}\r\n\r\n            {modalType && getModal(modalType)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport './index.css';\r\nimport App from './components/App/App';\r\nimport { store } from './services/reducers/Root';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <Router>\r\n                <App />\r\n            </Router>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"OrderListItem_page__3SQOz\",\"wrapper\":\"OrderListItem_wrapper__2Ngkv\",\"item\":\"OrderListItem_item__2_QOZ\",\"top\":\"OrderListItem_top__2mSR2\",\"bottom\":\"OrderListItem_bottom__3bHA6\",\"params\":\"OrderListItem_params__1Kz4h\",\"param\":\"OrderListItem_param__lzMkD\",\"lastParamImg\":\"OrderListItem_lastParamImg__1wJGs\",\"paramImg\":\"OrderListItem_paramImg__1D7Ug\",\"paramAdditionalValue\":\"OrderListItem_paramAdditionalValue__1hpyA\",\"price\":\"OrderListItem_price__1gTb3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ProfilePage_wrapper__16Ffy\",\"section\":\"ProfilePage_section__2XEYf\",\"labelWrapper\":\"ProfilePage_labelWrapper__3fue_\",\"label\":\"ProfilePage_label__2Dcad\",\"activeLabel\":\"ProfilePage_activeLabel__3Hx0U\",\"navHint\":\"ProfilePage_navHint__hNVJF\",\"content\":\"ProfilePage_content__2SRVC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Feed_container__2jna5\",\"wrapper\":\"Feed_wrapper__1KywM\",\"orderList\":\"Feed_orderList__1s3Mf\",\"orderTable\":\"Feed_orderTable__3D3kV\",\"numbers\":\"Feed_numbers__1TmtE\",\"numbers_block\":\"Feed_numbers_block__3In3g\",\"numbers_blue\":\"Feed_numbers_blue__-q92t\",\"result_text\":\"Feed_result_text__1Mh4j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"OrderItem_wrapper__2s20C\",\"ingredients\":\"OrderItem_ingredients__38HhJ\",\"ingredient\":\"OrderItem_ingredient__3IWIU\",\"title\":\"OrderItem_title__2j85W\",\"icon\":\"OrderItem_icon__BRZy7\",\"iconImg\":\"OrderItem_iconImg__2BXur\",\"bottom\":\"OrderItem_bottom__2G_R-\",\"price\":\"OrderItem_price__2ZmCK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AppHeader_wrapper__nI6-E\",\"nav\":\"AppHeader_nav__1QIre\",\"leftBlock\":\"AppHeader_leftBlock__3GkhU\",\"centralBlock\":\"AppHeader_centralBlock__yv_5L\",\"rightBlock\":\"AppHeader_rightBlock__1Vxhl\",\"navLink\":\"AppHeader_navLink__1n2Kf\",\"isActive\":\"AppHeader_isActive__1wLBO\",\"text\":\"AppHeader_text__2lyGT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"IngredientDetails_wrapper__2uRcy\",\"propertyList\":\"IngredientDetails_propertyList__2IdN9\",\"propertyItem\":\"IngredientDetails_propertyItem__1cd9O\",\"loaderContainer\":\"IngredientDetails_loaderContainer__15oyI\",\"loader\":\"IngredientDetails_loader__3sYjd\",\"mulShdSpin\":\"IngredientDetails_mulShdSpin__3Ki-f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Modal_wrapper__28bi7\",\"button\":\"Modal_button__3wE3W\",\"title\":\"Modal_title__1SDXM\",\"header\":\"Modal_header__1wG3O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"BurgerConstructor_wrapper__2TLps\",\"ingredientsBlock\":\"BurgerConstructor_ingredientsBlock__h5Hcr\",\"selectedBlock\":\"BurgerConstructor_selectedBlock__1SW6U\",\"priceBlock\":\"BurgerConstructor_priceBlock__3BkFb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"BurgerIngredients_wrapper__1oWgY\",\"ingredientsBlock\":\"BurgerIngredients_ingredientsBlock__CrgPr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"IngredientItem_wrapper__2IfnP\",\"priceBlock\":\"IngredientItem_priceBlock__32x_X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AdditionalLink_link__G-hlR\",\"linkLabel\":\"AdditionalLink_linkLabel__360VC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"OrderDetails_wrapper__12uSS\",\"orderNumber\":\"OrderDetails_orderNumber__1VxLS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ModalOverlay_wrapper__2kUDG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ConstructorPage_content__1Ddut\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredientsBlock\":\"IngredientsBlock_ingredientsBlock__2W_BW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"IngredientsTabs_wrapper__1ClY4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredient\":\"ConstructorIngredient_ingredient__TFQAr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SinglePageWrapper_wrapper__1Yv4v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderList\":\"Ordres_orderList__sc-M3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ErrorModal_wrapper__32UQf\"};"],"sourceRoot":""}